Index: feeds/xwrt/webif/files/www/cgi-bin/webif/status-usb.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/status-usb.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/status-usb.sh	(working copy)
@@ -81,7 +81,7 @@
 display_form <<EOF
 end_form
 EOF
-usbpr=`ls //usb/lp* 2>//null`
+usbpr=`ls /dev/lp* 2>/dev/null`
 if [ ! -z "$usbpr" ]; then
         inklevel_form=$(
         for p in $usbpr; do
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces.sh	(working copy)
@@ -1,218 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. "/usr/lib/webif/webif.sh"
-. "/usr/lib/webif/switchinfo.sh"
-
-###################################################################
-# VLAN configuration page
-#
-# Description:
-#	Configures any number of VLANs.
-#
-# Author(s) [in order of work date]:
-#	Fabian Omar Franzotti <fofware@gmail.com>
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#	none
-#
-# Configuration files referenced:
-#   network
-#
-uci_get() {
-	uci -P /var/state get "$1" 2>/dev/null
-}
-
-config_cb() {
-	cfg_type="$1"
-	cfg_name="$2"
-	case "$cfg_type" in
-	        switch)
-		        append switch_interfaces "$cfg_name"
-	        ;;
-	        switch_vlan)
-		        append vlan_interfaces "$cfg_name" "$N"
-	        ;;
-	esac
-}
-
-option_cb() {
-	local var_name="$1"; shift
-	local var_value="$*"
-	[ "$var_name" = "ifname" ] && [ "$cfg_type" = "interface" ] && eval "ifnames_${cfg_name}=\"$var_value\""
-}
-
-cgi_process()
-{
-	uci_load "network"
-	for vlans in $vlan_interfaces; do
-		eval bt_rmv="\$FORM_remove_$vlans"
-		if [ "$bt_rmv" != "" ]; then
-			uci_remove "network" "$vlans"
-		fi
-	done
-	for switch in $switch_interfaces; do
-		switch_info $switch
-		local bt_add
-		eval bt_add="\$FORM_add_vlan_${switch}"
-		if [ "$bt_add" != "" ]; then
-			eval value="\$FORM_newvlan_${switch}"
-			if [ $value -gt 0 ]; then
-				varname="${switch}_${value}"
-				config_get vlan "$varname" "vlan"
-				if [ "$vlan" = "" ]; then
-					uci_add "network" "switch_vlan" "$varname"
-					uci_set "network" "$varname" "device" "$switch"
-					uci_set "network" "$varname" "vlan" "$value"
-					uci_load "network"
-				fi
-			fi
-		fi
-		if [ "$FORM_submit" != "" ]; then
-			local enable 
-			local enable_vlan 
-			local vreset
-
-			eval enable="\$FORM_enable_${switch}"
-			eval enable_vlan="\$FORM_enable_vlan_${switch}"
-			eval vreset="\$FORM_reset_${switch}"
-
-			uci_set "network" "$switch" "enable" "$enable"
-			uci_set "network" "$switch" "enable_vlan" "$enable_vlan"
-			uci_set "network" "$switch" "reset" "$vreset"
-			
-			for vlans in $vlan_interfaces; do
-				config_get vlan $vlans vlan
-				config_get device $vlans device
-				if [ "$device" = "$switch" ]; then
-					ports=""
-					for port in $(seq $SW_PORT_BASE $SW_PORT_MAX); do
-						eval value="\"\$FORM_${switch}_${vlan}_port_${port}\""
-						if [ "$value" != "" ]; then
-							append ports "$port"
-						fi
-					done
-					uci_set "network" "$vlans" ports "$ports"
-				fi
-			done
-		fi
-	done
-	unset vlan_interfaces
-	unset switch_interfaces
-}
-
-formVlans ()
-{
-	switch_data_form=""
-	if [ "$SW_PORT_MAX" = "0" ]; then
-		return
-	fi
-	switch=$1
-	vlan_headers="string|<tr><th>&nbsp;</th>"
-	for current_port in $(seq $SW_PORT_BASE $SW_PORT_MAX); do
-		vlan_headers="${vlan_headers}<th>$current_port</th>"
-	done
-	vlan_headers="${vlan_headers}<td>&nbsp;</td></tr>"
-	for vlans in $vlan_interfaces; do
-		config_get ports $vlans ports
-		config_get vlan $vlans vlan
-		config_get device $vlans device
-		if [ "$device" = "$switch" ]; then
-			vlan_data="string|<tr><th>VLAN $vlan&nbsp;&nbsp;($device.$vlan)</th>"
-			for current_port in $(seq $SW_PORT_BASE $SW_PORT_MAX); do
-				port_included=0
-				variable_name="${switch}_${vlan}_port_${current_port}"
-				if [ "$FORM_submit" = "" ] ; then
-					echo "$ports" | grep "$current_port" >> "/dev/null"  2>&1
-					if equal "$?" "0" ; then
-						port_included=1
-					fi
-				else
-					eval port_included="\$FORM_$variable_name"
-				fi
-				checkbox_string="checkbox|$variable_name|$port_included|1|&nbsp;"
-				vlan_data="$vlan_data
-				string|<td>	
-				$checkbox_string
-				string|</td>"
-			done
-			vlan_data="$vlan_data
-			string|<td ><input TYPE='submit' name='remove_${device}_${vlan}' value='Delete It!' />
-			string|</td>
-			string|</tr>"
-			append setted_ports "$vlan_data" "$N"
-		fi
-	done
-	if [ "$setted_ports" != "" ]; then
-		switch_data_form="$vlan_headers
-		$setted_ports"
-	fi
-}
-
-switchForm ()
-{
-	local FORM_enable
-	local FORM_enable_vlan
-	local FORM_reset
-	
-	local FORM_enable=$(uci_get "network.$SW_DEVICE.enable")
-	local FORM_enable_vlan=$(uci_get "network.$SW_DEVICE.enable_vlan")
-	local FORM_reset=$(uci_get "network.$SW_DEVICE.reset")
-
-	FORM_enable=${FORM_enable:-0}
-	FORM_enable_vlan=${FORM_enable_vlan:-0}
-	FORM_reset=${FORM_reset:-0}
-
-	switch_form=""
-	append switch_form "start_form|@TR<<Interface>> $switch ($SW_DRIVER)"   "$N"
-	append switch_form "
-		field|@TR<<Enable this switch>>
-		checkbox|enable_${SW_DEVICE}|$FORM_enable|1
-		field|@TR<<Enable VLAN functionality>>
-		checkbox|enable_vlan_${SW_DEVICE}|$FORM_enable_vlan|1
-		field|@TR<<Reset switch during setup>>
-		checkbox|reset_${SW_DEVICE}|$FORM_reset|1
-		"
-	if [ $SW_VLAN_MAX -gt 0 ]; then
-		append switch_form "
-			field|@TR<<VLAN Number>>
-			text|newvlan_${SW_DEVICE}
-			submit|add_vlan_${SW_DEVICE}|@TR<<Add>> @TR<<Number between>> ($SW_VLAN_BASE - $SW_VLAN_MAX)
-		"
-	fi
-	append switch_form "end_form" "$N"
-	if [ "$SW_PORT_MAX" = "0" ]; then
-		return
-	fi
-	formVlans $SW_DEVICE
-	if [ "$switch_data_form" != "" ]; then
-		append switch_form "start_form|@TR<<Virtual Lans of>> $SW_DEVICE"   "$N"
-		append switch_form "$switch_data_form" "$N"
-		append switch_form "end_form" "$N"
-	fi
-}
-
-header "Network" "Switch" "@TR<<Switches>>" '' "$SCRIPT_NAME"
-cgi_process
-uci_load "network"
-for switch in $switch_interfaces; do
-	vlans_available=""
-	switch_info $switch
-	switchForm $switch
-	append interface_forms "$switch_form" "$N"
-done
-
-###################################################################
-# show form
-#
-display_form <<EOF
-onchange|modechange
-$vlan_forms
-$interface_forms
-EOF
-
- footer ?>
-<!--
-##WEBIF:name:Network:250:Switch
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-services.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-services.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-services.sh	(working copy)
@@ -1,170 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. "/usr/lib/webif/webif.sh"
-###################################################################
-# Services configuration page
-#
-# Description:
-#	Configures services not configured elsewhere.
-#
-# Author(s) [in order of work date]:
-#	Jeremy Collake <jeremy.collake@gmail.com>
-#
-# NVRAM variables referenced:
-#	none
-#
-# Configuration files referenced:
-#	none
-#
-
-header "Network" "UPnP" "@TR<<UPnP Configuration>>" ' onload="modechange()" ' "$SCRIPT_NAME"
-
-uci_load "upnpd"
-
-if ! empty "$FORM_install_miniupnp"; then
-	echo "@TR<<Installing>> miniUPNPd ...<pre>"
-	install_package miniupnpd
-	uci_set upnpd general enable 1
-	echo "</pre>"
-fi
-
-if ! empty "$FORM_install_linuxigd"; then
-	echo "@TR<<Installing>> linuxigd ...<pre>"
-	install_package libpthread
-	install_package libupnp
-	install_package linuxigd
-	# if config file doesn't exist, create it since it doesn't come with above pkg at present
-	! exists "/etc/config/upnpd" && {
-		uci_add upnpd upnpd config
-		uci_set upnpd config enabled 1
-	}
-	uci_load upnpd
-	echo "</pre>"
-fi
-
-if ! empty "$FORM_remove_miniupnpd"; then
-	echo "@TR<<Removing>> miniUPNPd ...<pre>"
-	remove_package miniupnpd
-	#uci_set "upnpd" "general" "enable" "0"
-	echo "</pre>"
-fi
-
-if ! empty "$FORM_remove_linuxigd"; then
-	echo "@TR<<Removing>> linuxigd UPNPd ...<pre>"
-	remove_package linuxigd
-	remove_package libupnp
-	remove_package libpthread
-	#uci_set "upnpd" "general" "enable" "0"
-	echo "</pre>"
-fi
-
-ipkg_listinst=$(opkg list_installed 2>/dev/null | grep "^\(miniupnpd \|linuxigd \)")
-upnp_installed="0"
-
-echo "$ipkg_listinst" | grep -q "^miniupnpd "
-equal "$?" "0" && {
-	upnp_installed="1"
-	upnp_miniupnpd="1"
-	remove_upnpd_button="field|@TR<<Remove miniupnpd>>
-	submit|remove_miniupnpd| @TR<<Remove>> |"
-}
-
-echo "$ipkg_listinst" | grep -q "^linuxigd "
-equal "$?" "0" && {
-	upnp_installed="1"
-	upnp_miniupnpd="0"
-	remove_upnpd_button="field|@TR<<Remove linuxigd>>
-	submit|remove_linuxigd| @TR<<Remove>> |"
-}
-
-if empty "$FORM_submit"; then
-	# initialize all defaults
-	FORM_upnp_enable="$CONFIG_config_enabled"
-	FORM_upnpd_log_output="$CONFIG_config_log_output"
-	FORM_upnpd_up_bitspeed="$CONFIG_config_upload"
-	FORM_upnpd_down_bitspeed="$CONFIG_config_download"
-else
-	# save form
-	uci_set upnpd config enabled "$FORM_upnp_enable"
-	if equal "$upnp_miniupnpd" "1" ; then
-		uci_set upnpd config log_output "$FORM_upnpd_log_output"
-		uci_set upnpd config download "$FORM_upnpd_down_bitspeed"
-		uci_set upnpd config upload "$FORM_upnpd_up_bitspeed"
-	fi
-fi
-
-#####################################################################s
-cat <<EOF
-<script type="text/javascript" src="/webif.js"></script>
-<script type="text/javascript">
-
-function modechange()
-{
-EOF
-if equal "$upnp_miniupnpd" "1" ; then
-	cat <<EOF
-	if(isset('upnp_enable','1'))
-	{
-		document.getElementById('upnpd_up_bitspeed').disabled = false;
-		document.getElementById('upnpd_down_bitspeed').disabled = false;
-		document.getElementById('upnpd_log_output').disabled = false;
-	}
-	else
-	{
-		document.getElementById('upnpd_up_bitspeed').disabled = true;
-		document.getElementById('upnpd_down_bitspeed').disabled = true;
-		document.getElementById('upnpd_log_output').disabled = true;
-	}
-EOF
-fi
-	cat <<EOF
-}
-</script>
-EOF
-#####################################################################
-
-if equal "$upnp_installed" "1" ; then
-	primary_upnpd_form="field|@TR<<UPNP Daemon>>
-	select|upnp_enable|$FORM_upnp_enable
-	option|0|@TR<<Disabled>>
-	option|1|@TR<<Enabled>>"
-	if equal "$upnp_miniupnpd" "1" ; then
-		primary_upnpd_form="$primary_upnpd_form
-		field|@TR<<WAN Upload (bits/sec)>>
-		text|upnpd_up_bitspeed|$FORM_upnpd_up_bitspeed| @TR<<kilobits>>
-		field|@TR<<WAN Download (bits/sec)>>
-		text|upnpd_down_bitspeed|$FORM_upnpd_down_bitspeed| @TR<<kilobits>>
-		helpitem|WAN Speeds
-		helptext|HelpText upnpd_wan_speeds#Set your WAN speeds here, in kilobits. This is for reporting to upnp clients that request it only.
-		field|@TR<<Log Debug Output>>
-		select|upnpd_log_output|$FORM_upnpd_log_output
-		option|0|@TR<<Disabled>>
-		option|1|@TR<<Enabled>>"
-	fi
-	primary_upnpd_form="$primary_upnpd_form
-	$remove_upnpd_button
-	helpitem|Remove UPNPd
-	helptext|HelpText remove_upnpd_help#If you have problems you can remove your current UPNPd and try the other one to see if it works better for you."
-else
-	install_miniupnp_button="field|@TR<<miniupnpd>>
-submit|install_miniupnp| @TR<<Install>> |"
-	install_linuxigd_button="field|@TR<<linuxigd>>
-submit|install_linuxigd| @TR<<Install>> |"
-	install_help="helpitem|Which UPNPd to choose
-helptext|HelPText install_upnpd_help#There are two UPNP daemons to choose from: miniupnpd and linuxigd. Try miniupnpd first, but it if does not work for you, then remove that package and try linuxigd."
-fi
-
-display_form <<EOF
-onchange|modechange
-start_form|@TR<<UPNP>>
-$primary_upnpd_form
-$install_miniupnp_button
-$install_linuxigd_button
-$install_help
-end_form
-EOF
-
-footer ?>
-<!--
-##WEBIF:name:Network:550:UPnP
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-ddns.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-ddns.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-ddns.sh	(working copy)
@@ -1,122 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-# todo:
-#  add /enable/disable for mx and wildcard / connection type.
-
-config_cb() {
-        local cfg_type="$1"
-        local cfg_name="$2"
-        case "$cfg_type" in
-                updatedd)
-                        cfg="$cfg_name"
-                ;;
-        esac
-}
-
-config_load "updatedd"
-if [ "$cfg" = "" ]; then
-	touch /etc/config/updatedd
-	uci_add updatedd "updatedd"
-	cfg="$CONFIG_SECTION"
-fi
-if empty "$FORM_submit"; then
-	config_get FORM_service "$cfg" service 
-	config_get FORM_username "$cfg" username
-	config_get FORM_password "$cfg" password
-	config_get FORM_host "$cfg" host
-	config_get_bool FORM_update "$cfg" update 0
-else
-	SAVED=1
-	validate <<EOF
-string|FORM_service|@TR<<Service Type>>|required|$FORM_service
-string|FORM_username|@TR<<User Name>>|required|$FORM_username
-string|FORM_password|@TR<<Password>>|required|$FORM_password
-string|FORM_host|@TR<<Host Name>>|required|$FORM_host
-EOF
-	equal "$?" 0 && {
-		uci_set updatedd "$cfg" update "$FORM_update"
-		uci_set updatedd "$cfg" service "$FORM_service"
-		uci_set updatedd "$cfg" username "$FORM_username"
-		uci_set updatedd "$cfg" password "$FORM_password"
-		uci_set updatedd "$cfg" host "$FORM_host"
-	}
-fi
-
-header "Network" "DynDNS" "@TR<<DynDNS Settings>>" '' "$SCRIPT_NAME"
-
-#define supported services
-services="changeip dyndns eurodyndns ovh noip ods hn regfish tzo zoneedit"
-
-#generate fields for supported services
-for service in $services; do
-	service_option="$service_option
-option|$service"
-	
-	opkg list_installed | grep -q "$service"
-	! equal "$?" 0 && {
-		package_checker="$package_checker
-field|@TR<<Dynamic DNS Package>>|install_$service|hidden
-string|<div class=\"warning\">$service will not work until you install the $service package. </div>
-submit|install_$service|@TR<<Install>> $service @TR<<Package>>|"
-
-		js="$js
-v = isset('service','$service');
-set_visible('install_$service', v);"
-
-		eval FORM_installer="\$FORM_install_$service"
-
-		if ! empty "$FORM_installer"; then
-			echo "Installing $service package ...<pre>"
-			install_package "updatedd-mod-$service"
-			echo "</pre>"
-		fi
-	}
-done
-
-cat <<EOF
-<script type="text/javascript" src="/webif.js"></script>
-<script type="text/javascript">
-<!--
-function modechange()
-{
-	var v;
-	$js
-
-	hide('save');
-	show('save');
-}
--->
-</script>
-
-EOF
-
-display_form <<EOF
-onchange|modechange
-start_form|@TR<<DynDNS>>
-field|@TR<<Dynamic DNS Update>>
-radio|update|$FORM_update|1|@TR<<Enable>>
-radio|update|$FORM_update|0|@TR<<Disable>>
-field|@TR<<Service Type>>
-select|service|$FORM_service
-$service_option
-$package_checker
-end_form
-
-start_form|@TR<<Account>>
-field|@TR<<User Name>>
-text|username|$FORM_username
-field|@TR<<Password>>
-password|password|$FORM_password
-end_form
-
-start_form|@TR<<Host>>
-field|@TR<<Host Name>>
-text|host|$FORM_host
-end_form
-EOF
-
-footer ?>
-<!--
-##WEBIF:name:Network:651:DynDNS
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/power-upgrade.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/power-upgrade.sh	(revision 0)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/power-upgrade.sh	(revision 0)
@@ -0,0 +1,219 @@
+#!/usr/bin/webif-page
+<?
+. /usr/lib/webif/webif.sh
+
+timeout=40
+release=$(uci get powertools.@system[0].release)
+ifname=$(uci show -p/var/state network |grep "ipaddr=$SERVER_ADDR" | awk -F '=' '{print $1}' | awk -F'.' '{print $1"."$2}')
+RELEASE_VERSION=$(uci get powertools.@system[0].version)
+RELEASE_URL="http://xbox-remote.googlecode.com/svn/trunk/embeded-system/openwrt/$release/release"
+
+proto=$(uci get -p/var/state "$ifname".proto)
+
+if [ "$proto" == "static" ]; then
+  ns_result=$(nslookup "$release" | grep "Address" | grep "$release"  | awk '{print $3}')
+  if [ "$ns_result" == "$SERVER_ADDR" ]; then
+    RELEASE="$release"
+  else
+    RELEASE="$SERVER_ADDR"
+  fi
+else
+  hostname=$(uci get -p/var/state "$ifname".lease_hostname)
+  if [ "$hostname" != "" ]; then
+    RELEASE="$hostname"
+  else
+    RELEASE="$SERVER_ADDR"
+  fi
+fi
+
+
+header "Power Tools" "Upgrade" "@TR<<Firmware Upgrade>>" ' onload="modechange()" ' "$SCRIPT_NAME"
+
+cat << EOF
+<div class="settings">
+<div class="version">
+<h3><strong>@TR<<Version#Current Firmware Version>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+EOF
+if [ "$RELEASE_VERSION" != "" ]; then
+echo "<tr><td>$RELEASE_VERSION</td></tr>"
+else
+echo "<tr><td>Unknown</td></tr>"
+fi
+cat << EOF
+</tbody>
+</table>
+</div>
+<div class="clearfix">&nbsp;</div></div>
+EOF
+
+if empty "$FORM_reboot"; then
+  if [ -f /tmp/powertools-release ]; then
+  rm /tmp/powertools-release
+  fi
+  wget -O /tmp/powertools-release $RELEASE_URL 2>/dev/null
+
+  RELEASE_RESULT=$(cat /tmp/powertools-release | awk '{print $1 "," $2 "," $3 "@"}')
+
+  for firmware in $(cat /tmp/powertools-release | awk '{print $2}'); do
+    if empty "$firmware_selection" ; then
+      firmware_selection="option|$firmware|@TR<<$firmware>>"
+    else
+    firmware_selection=$(echo -ne "$firmware_selection  \n option|$firmware|@TR<<$firmware>>")
+    fi
+  done
+
+
+
+  FORM_firmware_selected=$(cat /tmp/powertools-release | awk '{print $2}' | head -n 1)
+
+cat <<EOF
+<script type="text/javascript" src="/webif.js"></script>
+<script type="text/javascript">
+<!--
+function modechange()
+{
+  var myrelease = value('RELEASE_RESULT');
+  var mysplit = myrelease.split('@');
+  var myfirmware = value('firmware_selected');
+  for (var j=0; j<mysplit.length; j++) {
+    if (mysplit[j].search(myfirmware) >= 0){
+      var mysum = mysplit[j].split(",")[0];
+    }
+  }
+  set_value('show_FIRMWARE_SUM', mysum);
+  set_value('show_FIRMWARE_URL', 'http://xbox-remote.googlecode.com/files/'+myfirmware);
+}
+-->                                                                                                                    
+</script>                                                                                                              
+EOF
+
+cat <<EOF
+<input type="hidden" id="RELEASE_RESULT" value="$RELEASE_RESULT" />
+<h3><strong>@TR<<Firmware#Select Firmware>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+EOF
+
+display_form <<EOF
+onchange|modechange
+field|@TR<<Available Firmware>>
+select|firmware_selected|$FORM_firmware_selected
+$firmware_selection
+field|@TR<<FIRMWARE_URL_Sring#Firmware URL>>|view_firwware_url_string|
+string|<input id="show_FIRMWARE_URL" type="text" style="width: 96%;[D height: 1.2em; " name="show_FIRMWARE_URL" value="@TR<<system_settings_js_required#This field requires the JavaScript support.>>" />
+field|@TR<<FIRMWARE_MD5SUM_Sring#Firmware MD5SUM>>|view_firmware_md5sum_string|
+string|<input id="show_FIRMWARE_SUM" type="text" style="width: 96%;[D height: 1.2em; " name="show_FIRMWARE_SUM" value="@TR<<system_settings_js_required#This field requires the JavaScript support.>>" />
+field|@TR<<>>
+submit|reboot| @TR<<Upgrade Firmware>> |
+end_form
+EOF
+
+else
+
+  if [ "$FORM_show_FIRMWARE_URL" != "This field requires the JavaScript support." ] && [ "$FORM_show_FIRMWARE_URL" != "" ]; then
+
+cat << EOF
+<div class="log">
+<h3><strong>@TR<<Logs#Downloading Logs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+EOF
+echo "<tr><td>Downloading firmware from URL $FORM_show_FIRMWARE_URL </td></tr>"
+
+  /usr/bin/wget -O /tmp/openwrt-upgrade.bin "$FORM_show_FIRMWARE_URL" 2>&1 | awk  '
+BEGIN{
+	odd=0
+	tr_ind = ""
+	td_ind = "\t"
+}
+function oddline() {
+	if (odd == 1) {
+		print tr_ind "<tr>"
+		odd--
+	} else {
+		print tr_ind "<tr class=\"odd\">"
+		odd++
+	}
+}
+{
+	if (length($0) != 0) {
+		oddline()
+		print td_ind "<td >" $0 "</td>"
+		print tr_ind "</tr>"
+	}
+}
+END{
+}
+'
+display_form <<EOF
+string|</tbody>
+end_form
+EOF
+
+  download_sum=$(md5sum /tmp/openwrt-upgrade.bin | awk '{print $1}')
+    if [ "$FORM_show_FIRMWARE_SUM" == "$download_sum" ] && ! empty "$download_sum" ; then
+cat <<EOF
+<div class="log">
+<h3><strong>@TR<<Logs#Flashing Logs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr><td>Flashing firmware... This can take up to 2 minutes.</td></tr>
+<tr class="odd"><td>Please wait about 2 minutes and click here <a href="http://$RELEASE">$RELEASE</a>. </td></tr>
+</tbody>
+</table>
+</div>
+<div class="clearfix">&nbsp;</div></div>
+<br/><br/><br/>
+<table width="90%" border="0" cellpadding="2" cellspacing="2" align="center">
+<tr>
+<td><script type="text/javascript" src="/js/progress.js"></script>
+<center>
+<script type="text/javascript">
+<!--
+var bar1=createBar(350,15,'white',1,'black','blue',85,7,3,'');
+-->
+</script>
+</center>
+<br/><br/><br/></td>
+</tr>
+</table>
+<meta http-equiv="refresh" content="120;http://$RELEASE" />
+EOF
+
+    sleep 3
+    uci_set webif general firstboot 1
+    uci_commit "webif"
+    sysupgrade -v -n /tmp/openwrt-upgrade.bin
+
+    else   
+    cat << EOF
+<div class="log">
+<h3><strong>@TR<<Error_Logs#Error Logs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr><td><font color="red"> md5sum does not match!!! Upgrade aborted!!!</font></td></tr>
+</tbody>
+</table>
+</div>
+<div class="clearfix">&nbsp;</div></div>
+<meta http-equiv="refresh" content="$timeout;http://$RELEASE" />"
+EOF
+    
+    
+    fi
+  exit
+  fi
+fi
+
+?>
+
+<!--
+##WEBIF:name:Power Tools:020:Upgrade
+-->

Property changes on: feeds/xwrt/webif/files/www/cgi-bin/webif/power-upgrade.sh
___________________________________________________________________
Added: svn:executable
   + *

Index: feeds/xwrt/webif/files/www/cgi-bin/webif/system-access-control.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/system-access-control.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/system-access-control.sh	(working copy)
@@ -1,180 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-
-###################################################################
-#
-# System configuration page
-#
-# Description:
-#	Configures access control for the webif
-#
-# Author(s) [in order of work date]:
-#	Travis Kemen <kemen04@gmail.com>
-#
-# Major revisions:
-#
-# Configuration files referenced:
-#   /etc/config/webif_access_control
-#
-
-cachedir=/tmp/.webcache
-#admin is also a superuser but maybe removed in the future.
-superuser=root
-mkdir /tmp/.webif/
-exists /etc/config/webif_access_control || touch /etc/config/webif_access_control
-
-if [ "$FORM_user_add" != "" ]; then
-	validate <<EOF
-string|FORM_password_add|@TR<<Password>>|required min=5|$FORM_password_add
-EOF
-	equal "$FORM_password_add" "$FORM_password2_add" || {
-		[ -n "$ERROR" ] && ERROR="${ERROR}<br />"
-		ERROR="${ERROR}@TR<<password_mismatch#The passwords do not match!>><br />"
-	}
-	if [ "${FORM_user_add}" = "root" -o "${FORM_user_add}" = "admin" ]; then
-		[ -n "$ERROR" ] && ERROR="${ERROR}<br />"
-		ERROR="${ERROR}@TR<<root and admin are already users>>.<br />"
-	fi
-	[ -e /tmp/.webif/file-httpd.conf ] && HTTPD_CONFIG_FILE=/tmp/.webif/file-httpd.conf
-	[ -e /etc/httpd.conf ] && HTTPD_CONFIG_FILE="$HTTPD_CONFIG_FILE /etc/httpd.conf"
-	[ -n "HTTPD_CONFIG_FILE" ] && grep -q "$FORM_user_add" $HTTPD_CONFIG_FILE
-	if [ "$?" = "0" ]; then
-		[ -n "$ERROR" ] && ERROR="${ERROR}<br />"
-		ERROR="${ERROR}$FORM_user_add @TR<<already exists.>>.<br />"
-	fi
-	empty "$ERROR" && {
-		password=$(uhttpd -m $FORM_password_add)
-		[ -e /tmp/.webif/file-httpd.conf ] || cp /etc/httpd.conf /tmp/.webif/file-httpd.conf
-		echo "/cgi-bin/webif/:${FORM_user_add}:${password}" >>/tmp/.webif/file-httpd.conf
-		uci_add "webif_access_control" "accesscontrol" "${FORM_user_add}"
-		unset FORM_user_add
-	}
-	unset FORM_submit
-fi
-header "System" "Access Control" "@TR<<Access Control>>" '' "$SCRIPT_NAME"
-
-exists /tmp/.webif/file-httpd.conf && HTTPD_CONFIG_FILE=/tmp/.webif/file-httpd.conf || HTTPD_CONFIG_FILE=/etc/httpd.conf
-
-awk -F: -v "cachedir=$cachedir" -v "superuser=$superuser" '
-BEGIN { ucount = 0;
-	include("/usr/lib/webif/common.awk");
-	start_form("@TR<<Users>>");
-
-	if (ENVIRON["FORM_submit"] != "") {
-		if (ENVIRON["FORM_remove_user_"$2] != "") {
-			system("/bin/rm -f " cachedir "/cat" $2);
-			system("/bin/rm -f " cachedir "/subcat" $2);
-			system("touch /tmp/.webif/file-httpd.conf.2");
-		} else if (ENVIRON["FORM_change_password_"$2] != "")
-			system("touch /tmp/.webif/file-httpd.conf.2");
-	}
-}
-($1 == "/cgi-bin/webif/" && $2 != superuser && $2 != "admin") {
-	if (ENVIRON["FORM_remove_user_" $2] == "") {
-		field($2);
-		password("user_"$2, ENVIRON["FORM_user_" $2]);
-		submit("change_password_"$2, "@TR<<system_acl_changepw#Change Password>>");
-		field("&nbsp;");
-		print "<span class=\"smalltext\"><a href=\"" ENVIRON["SCRIPT_NAME"] "?remove_user_" $2 "=" $2 "&submit=1" "\">@TR<<system_acl_remove_user#Remove user>> " $2 "</a></span>";
-		field("&nbsp;");
-		ucount = ucount + 1;
-	}
-}
-((ENVIRON["FORM_submit"] != "") && ($1 != "")) {
-	if (($1 == "/cgi-bin/webif/") && (ENVIRON["FORM_remove_user_"$2] != $2) && (ENVIRON["FORM_change_password_"$2] == "")) {
-		print $1":"$2":"$3 >>"/tmp/.webif/file-httpd.conf.2";
-	}
-	if ($1 != "/cgi-bin/webif/") {
-		print $0 >>"/tmp/.webif/file-httpd.conf.2";
-	}
-	if (ENVIRON["FORM_change_password_"$2] != "") {
-		("uhttpd -m " ENVIRON["FORM_user_"$2]) | getline password;
-		print $1":"$2":"password >>"/tmp/.webif/file-httpd.conf.2";
-	}
-}
-END {
-	if (ucount == 0)
-		print "<tr><td>No users defined.";
-
-	end_form("","",1);
-	start_form("@TR<<Add User>>");
-	field("@TR<<Username>>");
-	textinput3("user_add", ENVIRON["FORM_user_add"]);
-	field("@TR<<Password>>");
-	password("password_add");
-	field("@TR<<Confirm Password>>");
-	password("password2_add");
-	field("&nbsp;","");
-	submit("add_user", "@TR<<Add User>>");
-	end_form("","",1);
-}' $HTTPD_CONFIG_FILE 2>/dev/null
-
-[ -e /tmp/.webif/file-httpd.conf.2 ] && mv -f /tmp/.webif/file-httpd.conf.2 /tmp/.webif/file-httpd.conf
-exists /tmp/.webif/file-httpd.conf && HTTPD_CONFIG_FILE=/tmp/.webif/file-httpd.conf || HTTPD_CONFIG_FILE=/etc/httpd.conf
-users=$(awk -F":" '($1 == "/cgi-bin/webif/") { if (($2 != "root") && ($2 != "admin")) print $2 }' $HTTPD_CONFIG_FILE 2>/dev/null)
-
-for user in $users; do
-	export user
-	#[ -s $cachedir/subcat_${user} ] || init_cache "$user"
-	awk -F: '
-BEGIN {
-	include("/usr/lib/webif/common.awk")
-	config_load("webif_access_control")
-	start_form("@TR<<ACL User>>: " ENVIRON["user"])
-}
-{
-	if (ENVIRON["FORM_submit"] == "") {
-		if ($1 != "Graphs") {
-			var = config_get_bool(ENVIRON["user"], $1"_"$2, "0")
-		} else {
-			var = config_get_bool(ENVIRON["user"], "Graphs", "0")
-		}
-	} else {
-		if ($1 != "Graphs") {
-			varorig = config_get_bool(ENVIRON["user"], $1"_"$2, "0")
-			var2 = "FORM_" ENVIRON["user"] "_" $1 "_" $2
-			var = ENVIRON[var2]
-			if (varorig != var) {
-				uci_set("webif_access_control", ENVIRON["user"], $1 "_" $2, var)
-			}
-		} else {
-			varorig = config_get_bool(ENVIRON["user"], "Graphs", "0")
-			var2 = "FORM_" ENVIRON["user"] "_Graphs"
-			var = ENVIRON[var2]
-			if (varorig != var) {
-				uci_set("webif_access_control", ENVIRON["user"], "Graphs", var)
-			}
-		}
-	}
-	if (($1 != category) && ($1 != GRAPHS)) {
-		field("<h2>@TR<<"$1">></h2>")
-	}
-	category = $1
-	if ($1 != GRAPHS) {
-		if ($1 == "Graphs") {
-			GRAPHS = $1
-			field("@TR<<Graphs>>")
-			select(ENVIRON["user"]"_Graphs", var)
-		} else {
-			field("@TR<<"$3">>")
-			select(ENVIRON["user"]"_"$1"_"$2, var)
-		}
-		option("1", "@TR<<Enabled>>")
-		option("0", "@TR<<Disabled>>")
-		print "</select>"
-		select_open = 0
-	}
-}
-	END {
-		end_form("","",1)
-	}' $cachedir/subcat_$superuser
-done
-
-footer
-
-?>
-
-<!--
-##WEBIF:name:System:160:Access Control
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/status-pppoe.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/status-pppoe.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/status-pppoe.sh	(working copy)
@@ -1,64 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-header "Status" "PPPoE" "@TR<<PPPoE Status>>"
-?>
-<?
-if [ "$FORM_action" = "reconnect" ]; then
-	ifdown wan && ifup wan
-elif [ "$FORM_action" = "disconnect" ]; then
-	ifdown wan
-elif [ "$FORM_action" = "connect" ]; then
-	ifup wan
-fi
-?>
-<table style="width: 90%; text-align: left;" border="0" cellpadding="2" cellspacing="2" align="center">
-<tbody>
-	<tr>
-		<th><a href="status-pppoe.sh?action=reconnect" style="color: red">Reconnect</a></th>
-	</tr>
-	</tr>
-		<tr><td><br /></td></tr>
-	<tr>
-	<tr>
-		<th><b>Manual Control:</b></th>
-	</tr>
-	<tr>
-		<th><a href="status-pppoe.sh?action=disconnect" style="color: green">Disconnect</a></th>
-	</tr>
-	<tr>
-		<th><a href="status-pppoe.sh?action=connect" style="color: green">Connect</a></th>
-	</tr>
-		<tr><td><br /><br /></td></tr>
-	<tr>
-		<th><b>Ip Addr:</b></th>
-	</tr>
-	<tr>
-		<td><pre><? ifconfig |grep ppp0 >>/dev/null
-			if [ $? = 0 ]; then
-			/sbin/ifconfig ppp0 | grep inet | awk '{print $2}'| awk -F : '{print $2}'
-			fi  ?></pre></td>
-	</tr>
-		<tr><td><br /><br /></td></tr>
-	<tr>
-		<th><b>Ifconfig ppp0</b></th>
-	</tr>
-	<tr>
-		<td><pre><? ifconfig |grep ppp0 >>/dev/null
-			if [ $? = 0 ]; then
-			ifconfig ppp0 
-			fi ?></pre></td>
-	</tr>
-		<tr><td><br /><br /></td></tr>
-	<tr>
-		<th><b>Syslog: pppd (Last 500 lines)</b></th>
-	</tr>
-	<tr>
-		<td><pre><? logread | grep pppd |tail -n 500 -|sort -r | sed ' s/\&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g' ?></pre></td>
-	</tr>
-</tbody>
-</table>
-<? footer ?>
-<!--
-##WEBIF:name:Status:500:PPPoE
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/status-asterisk.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/status-asterisk.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/status-asterisk.sh	(working copy)
@@ -1,128 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-header "Status" "Asterisk" "@TR<<Asterisk Simple Managment>>"
-
-if [ -e /var/run/asterisk.pid ]; then
-
-ast_pid=$(cat /var/run/asterisk.pid)
-
-ast_proc_info="$(cat /proc/$ast_pid/cmdline | tr '\0' ' ')"
-
-asterisk_exec="$(echo $ast_proc_info | awk '{print $1}')"
-
-if [ -z "$asterisk_exec" ]; then
-	asterisk_exec="/usr/sbin/asterisk"
-fi
-
-ast_conf_file="$(echo $ast_proc_info | awk '{for (i=2; i<=NF; i++) if ($i == "-C") print $(i+1)}')"
-
-if [ -e "$ast_conf_file" ]; then
-	ast_conf_path="$(cat $ast_conf_file | grep '^astetcdir => ')"
-
-	if [ -n "$ast_conf_path" ]; then
-		ast_conf_path="$(echo $ast_conf_path | awk '{print $3}')"
-	else
-		ast_conf_path=/etc/asterisk
-	fi
-else
-	ast_conf_path=/etc/asterisk
-fi
-
-echo '<center>'
-echo '<a href="'$SCRIPT_NAME'">Version</a>'
-echo '<a href="'$SCRIPT_NAME'?action=sip_peers">SIP/Peers</a>'
-echo '<a href="'$SCRIPT_NAME'?action=sip_channels">SIP/Channels</a>'
-echo '<a href="'$SCRIPT_NAME'?action=sip_registry">SIP/Registry</a>'
-echo '<a href="'$SCRIPT_NAME'?action=iax_peers">IAX/Peers</a>'
-echo '<a href="'$SCRIPT_NAME'?action=iax_channels">IAX/Channels</a>'
-echo '<a href="'$SCRIPT_NAME'?action=iax_registry">IAX/Registry</a>'
-echo '<a href="'$SCRIPT_NAME'?action=modules">Global/Modules</a>'
-echo '<a href="'$SCRIPT_NAME'?action=cust_com">Custom/Command</a>'
-echo '<a href="'$SCRIPT_NAME'?action=editor">.conf Editor</a>'
-echo '<a href="'$SCRIPT_NAME'?action=reload">Reload</a>'
-echo '<br /><br /><br />'
-echo '<table><tr><td align=left border=0>'
-echo '<pre>'
-if [ "$FORM_action" = "reload" ]; then
-	echo "<h3>Reloading...</h3>"
-	$asterisk_exec -r -x 'reload'
-elif [ "$FORM_action" = "sip_peers" ]; then
-	echo "<h3>SIP/Peers</h3>"
-	$asterisk_exec -r -x 'sip show peers'
-elif [ "$FORM_action" = "sip_channels" ]; then
-	echo "<h3>SIP/Channels</h3>"
-	$asterisk_exec -r -x 'sip show channels'
-elif [ "$FORM_action" = "sip_registry" ]; then
-	echo "<h3>SIP/Registry</h3>"
-	$asterisk_exec -r -x 'sip show registry'
-elif [ "$FORM_action" = "iax_peers" ]; then
-	echo "<h3>IAX/Peers</h3>"
-	$asterisk_exec -r -x 'iax2 show peers'
-elif [ "$FORM_action" = "iax_channels" ]; then
-	echo "<h3>IAX/Channels</h3>"
-	$asterisk_exec -r -x 'iax2 show channels'
-elif [ "$FORM_action" = "iax_registry" ]; then
-	echo "<h3>IAX/Registration</h3>"
-	$asterisk_exec -r -x 'iax2 show registry'
-elif [ "$FORM_action" = "modules" ]; then
-	echo "<h3>Global/Modules</h3>"
-	$asterisk_exec -r -x 'module show'
-elif [ "$FORM_action" = "execute" ]; then
-	echo "<h3>$FORM_exec_com</h3>"
-	$asterisk_exec -r -x "$FORM_exec_com"
-elif [ "$FORM_action" = "" ]; then
-	$asterisk_exec -r -x 'core show version'
-fi
-echo '</pre>'
-echo '</td></tr></table>'
-echo '</center>'
-if [ "$FORM_action" = "cust_com" ]; then
-	echo '<form action="'$SCRIPT_NAME'" method=POST>'
-	echo '<center>'
-	echo '<INPUT type=text name="exec_com" value="'$FORM_exec_com'" size="25" maxlength="150">'
-	echo '<br /><br /><INPUT type="submit" value="@TR<<Accept>>">'
-	echo '<INPUT name="action" type="hidden" value="execute">'
-	echo "<br /><br />Enter 'help' for commands details."
-	echo '</center>'
-	echo '</form>'
-fi
-if [ "$FORM_action" = "editor" ]; then
-	echo '<center><form action="'$SCRIPT_NAME'" method=POST>'
-	echo '<table style="width: 25%; text-align: left;" border="0" cellpadding="2" cellspacing="2" align="center">'
-	ls $ast_conf_path/.  | awk -F' ' '
-	{
-		link=$1
-		gsub(/\+/,"%2B",link)
-		print "<tr><td><a href=\"'$SCRIPT_NAME'?action=edit&target=" link "\">@TR<<Edit>></td><td>" $1 "</td></tr></a>"
-	}'
-	echo '</table></form></center>'
-fi
-if [ "$FORM_conf" != "" ]; then
-	echo "$FORM_conf" | tr -d '\r' > $ast_conf_path/$FORM_target
-fi
-if [ "$FORM_action" = "edit" ]; then
-	conf_file="$( cat $ast_conf_path/$FORM_target )"
-	echo '<form action="'$SCRIPT_NAME'" method=POST>'
-	echo '<center>'
-	echo '<TEXTAREA name="conf" rows="30" cols="100">'
-	echo -n "$conf_file"
-	echo '</TEXTAREA>'
-	echo '<INPUT name="target" type="hidden" value="'$FORM_target'">'
-	echo '<br /><INPUT type="submit" value="@TR<<Save Changes>>">'
-	echo '</center>'
-	echo '</form>'
-fi
-else
-	if [ -x /usr/sbin/asterisk ]; then
-		echo "@TR<<Asterisk is not running.>>"
-	else
-		echo "@TR<<Asterisk is not installed.>>"
-		echo "@TR<<Install one of asterisk packages:>>"
-		has_pkgs asterisk14 asterisk14-mini asterisk16
-	fi
-fi
-footer ?>
-<!--
-##WEBIF:name:Status:901:Asterisk
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/log-browse.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/log-browse.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/log-browse.sh	(working copy)
@@ -1,193 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-
-config_cb() {
-	local cfg_type="$1"
-	local cfg_name="$2"
-
-	case "$cfg_type" in
-		syslogd)
-			append config "$cfg_name"
-		;;
-	esac
-}
-
-if ! empty "$FORM_submit"; then
-	uci_set "webif" "firewall" "log" "$FORM_enabled"
-else
-	uci_load webif
-	config_get FORM_enabled firewall log
-fi
-uci_load syslog
-#---------------------------------------------
-# sets the type of log: file or circular
-# defaults to circular, wich is the default install for openwrt
-# use log-setup.sh to modify these parameters
-config_get LOG_TYPE "$config" type
-config_get LOG_FILE "$config" file
-if equal $LOG_TYPE "file" ; then
-	LOG_FILE=${LOG_FILE:-"/var/log/messages"}
-	LOGREAD="cat "$LOG_FILE
-else LOGREAD="logread"
-fi
-
-#--------------------------------------------
-# sets all parameters for diplaying the settings of the current request being displayed
-# and sets the filter itself
-# this initialisation is a bit complicated - but like this we got a very simple condition to test in the awk parse loop
-if ! empty "$FORM_submit" ; then
-	#the  filter has been  selected via the form
-	if equal $FORM_act "A" ; then
-		FORM_value=""
-	fi
-	if equal $FORM_act "p" ; then
-		FORM_value=$FORM_value":"
-		FORM_act=":"
-	fi
-	FORM_filter=$FORM_act$FORM_value
-elif ! empty "$FORM_filter" ; then
-	# the filter has been selected via a link
-	long=${#FORM_filter}
-	idx=$(expr index "$FORM_filter" : )
-	if equal $idx 1 ; then
-		# PREFIX
-		FORM_act="p"
-		FORM_value=$(expr substr "$FORM_filter" 2 $(($long-1)))
-		FORM_filter=$FORM_value
-	else
-		# the rest (SRC DST PROTO SPT DPT TYPE)
-		idx=$(expr index "$FORM_filter" = )
-		FORM_value=$(expr substr "$FORM_filter" $(($idx+1)) $(($long-$idx)))
-		FORM_act=$(expr substr "$FORM_filter" 1 $idx)
-		# the case of a blank field
-		idx=$(expr index "$FORM_filter" - )
-		if ! equal $idx 0 ; then
-			FORM_filter=$FORM_act" "
-		fi
-	fi
-else
-	# no filter selected
-	FORM_act="A"
-	FORM_value=""
-fi
-
-if equal $FORM_act "SRC=" || equal $FORM_act "DST=" ; then
-	DEC=$(nslookup $FORM_value | awk ' ( /^Name:/ ) {print $2}  ')
-fi
-
-
-header "Log" "Firewall Log View" "@TR<<Netfilter Log>>" '' "$SCRIPT_NAME"
-
-has_pkgs iptables-mod-filter
-
-# request for filtering -----------------------
-display_form <<EOF
-start_form|@TR<<Filter>>
-field|@TR<<Log>>
-radio|enabled|$FORM_enabled|1|@TR<<Enabled>>
-radio|enabled|$FORM_enabled|0|@TR<<Disabled>>
-field|@TR<<Filter>>
-select|act|$FORM_act
-option|A|@TR<<All>>
-option|p|@TR<<Prefix>>
-option|SRC=|@TR<<Source IP>>
-option|DST=|@TR<<Destination IP>>
-option|PROTO=|@TR<<Protocol>>
-option|SPT=|@TR<<Source Port>>
-option|DPT=|@TR<<Destination Port>>
-option|TYPE=|@TR<<Type>>
-text|value|$FORM_value
-field|$DEC
-end_form
-EOF
-
-
-# display --------------------------------
-$LOGREAD | sort -r | awk -v filter=$FORM_filter -F ' ' '
-BEGIN {
-	print "<h3>@TR<<Listing>></h3>";
-	print "<table width=\"90%\">";
-	print "<th>@TR<<Date>></th><th>@TR<<Prefix>></th><th>@TR<<Source IP>></th><th>@TR<<Destination IP>></th><th>@TR<<Proto>></th><th>@TR<<Source Port>></th><th>@TR<<Dest. Port>></th><th>@TR<<Type>></th>";
-	}
-
-# is this line a netfilter record ?
-(/IN=/ && /OUT=/ && /PROTO/) {
-	#is this record requested ?
-	if ( ( filter != "" ) && ( $0 !~ filter ) ) next;
-
-	i=1; #field counter
-	space=" "
-
-	if ( i > NF) next;
-	action=""
-	idx=index($i,"IN=");
-	prefix=""
-	while ( ($i != "kernel:") ) i++;
-	prefix=""
-	i++
-	while ( ($i !~ /IN=/) ) {
-		if (prefix == "")
-			prefix=(prefix, $i)
-		else
-			 prefix=(prefix, space, $i)
-		i++
-	}
-
-	while ( ($i !~ /OUT=/) && (i <= NF) ) i++;
-	if ( i > NF) next;
-	if_out=substr( $i, 5, length($i) - 4);
-	if (if_out == "") if_out="-";
-
-	while ( ($i !~ /SRC=/)  && (i <= NF) ) i++;
-	if ( i > NF) next;
-	ip_src=substr( $i, 5, length($i) - 4);
-
-	while (($i !~ /DST=/)  && (i <= NF) ) i++;
-	if ( i > NF) next;
-	ip_dst=substr( $i, 5, length($i) - 4);
-
-	while ( ($i !~ /PROTO=/)  && (i <= NF) ) i++;
-	if ( i > NF) next;
-	proto=substr( $i, 7, length($i) - 6);
-
-	spt="";
-	dpt="";
-	type="";
-	if ( (proto == "TCP") || (proto == "UDP") )
-		{
-		while ( ($i !~ /SPT=/)  && (i <= NF) ) i++;
-		if ( i > NF) next;
-		spt=substr( $i, 5, length($i) - 4);
-
-		while ( ($i !~ /DPT=/)  && (i <= NF) ) i++;
-		if ( i > NF) next;
-		dpt=substr( $i, 5, length($i) - 4);
-		}
-	if (proto == "ICMP")
-		{
-		while ( ($i !~ /TYPE=/)  && (i <= NF) ) i++;
-		if ( i > NF) next;
-		type=substr( $i, 6, length($i) - 5);
-		}
-
-	print "<tr><td>"$1" "$2" "$3"</td>"\
-	"<td><a href=log-browse.sh?filter=:"prefix">"prefix"</a></td>"\
-	"<td><a href=log-browse.sh?filter=SRC="ip_src">"ip_src"</a></td>"\
-	"<td><a href=log-browse.sh?filter=DST="ip_dst">"ip_dst"</a></td>"\
-	"<td><a href=log-browse.sh?filter=PROTO="proto">"proto"</a></td>"\
-	"<td><a href=log-browse.sh?filter=SPT="spt">"spt"</a></td>"\
-	"<td><a href=log-browse.sh?filter=DPT="dpt">"dpt"</a></td>"\
-	"<td><a href=log-browse.sh?filter=TYPE="type">"type"</a></td>"\
-	"<tr>\n";
-	}
-
-END { print "</table>"}
-'
-
-
-footer ?>
-
-<!--
-##WEBIF:name:Log:004:Firewall Log View
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/info-about.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/info-about.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/info-about.sh	(working copy)
@@ -1,80 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# About page
-#
-# Description:
-#        Shows the many contributors.
-#
-# Author(s) [in order of work date]:
-#       Original webif authors.
-#        Jeremy Collake <jeremy.collake@gmail.com>
-#        Dmytro Dykhman <dmytro@iroot.ca.
-#
-# Major revisions:
-#
-# Configuration files referenced:
-#   none
-#
-header "Info" "About" "<img src=\"/images/abt.jpg\" alt=\"@TR<<About>>\" />@TR<<About>>"
-
-this_revision=$(cat "/www/.version")
-
-?>
-<script src="/js/scrollbox.js" type="text/javascript"></script>
-<h2><a href="http://www.x-wrt.org">@TR<<X-Wrt Extensions>></a> &ndash; webif&sup2;</h2>
-
-<em>Bleeding Edge - r<? echo "$this_revision" ?></em>
-
-<div id="outerscrollBox"  onMouseOver="copyspeed=pausespeed" onMouseOut="copyspeed=marqueespeed">
-
-<div id="scrollBox">
-
-<h1>@TR<<Webif&sup2; Credits>></h1>
-<h2>@TR<<Primary Developers>> <em>(@TR<<sorted_by_name#sorted by name>>)</em></h2>
-<ul>
-	<li><a href="mailto:jeremy.collake@gmail.com">Jeremy Collake (db90h)</a></li>
-	<li><a href="mailto:kemen04@gmail.com">Travis Kemen (thepeople)</a></li>
-	<li><a href="mailto:lubek@users.berlios.de">Luboš Staněk (lubek)</a></li>
-	<li><a href="mailto:fofware@users.berlios.de">Fabian Omar Franzotti (fofware)</a></li>
-</ul>
-
-<h2>@TR<<Contributing Developers>> <em>(@TR<<sorted_by_name#sorted by name>>)</em></h2>
-
-<ul>
-	<li><a href="mailto:oxo@users.berlios.de">Owen Brotherwood (oxo)</a></li>
-	<li><a href="mailto:dmytro@iroot.ca">Dmytro Dykhman</a></li>
-	<li><a href="mailto:openwrt@nbd.name">Felix Fietkau</a> (nbd)</li>
-	<li><a href="mailto:guymarc@users.berlios.de">Guy Marcenac (guymarc)</a></li>
-	<li><a href="mailto:openwrt@kewis.ch">Philipp Kewisch</a></li>
-	<li><a href="mailto:gregers@wireless-ownership.org">Gregers Petersen</a></li>
-	<li><a href="mailto:mtsales@users.berlios.de">Mario Sales</a></li>
-	<li><a href="mailto:markus@freewrt.org">Markus Wigge</a></li>
-	<li><a href="mailto:liran@enginx.com">Liran Tal</a></li>
-	<li><a href="mailto:o.hardy@mail2web.com">Olivier Hardy (SeDkY)</a></li>
-	<li><a href="mailto:seitel@users.berlios.de">Stefan Eitel</a></li>
-	<li><a href="mailto:tyardley@users.berlios.de">Tim Yardley (lst)</a></li>
-</ul>
-
-<h2>@TR<<Other Contributions>></h2>
-<ul>
-	<li>Reinhold Kainhofer, ido, Strontian, Sven-Ola, redhat, Exiles, and many others.</li>
-	<li>@TR<<Monowall_Credit#CPU and Traffic graphs based on code from>> <a href="http://m0n0.ch/wall/">m0n0wall</a></li>
-	<li>@TR<<Cova_Credit#Some pages have been adopted from code written by>> David Bird, <a href="http://www.coova.org">Coova Technologies</a>, @TR<<and>> <a href="http://sourceforge.net/projects/hotspot-zone">Hotspot-Zone</a></li>
-	<li>@TR<<CSS_Layout#Layout was originally based on>> <a href="http://www.openwebdesign.org/design/1773/prosimii/">&quot;Prosimii&quot;</a> @TR<<by>> haran.</li>
-	<li>@TR<<UCI facilitating code>> @TR<<Copyright>> (C) 2006 by <a href="mailto:carsten.tittel@fokus.fraumhofer.de">Fokus Fraunhofer</a>.</li>
-	<li>@TR<<Translator_Credit#The translation you are currently using is authored by (nobody).>></li>
-	<li>@TR<<zephyr_Text#The Zephyr theme is under the MIT licence.>></li>
-</ul>
-
-<p>@TR<<This device is running>> <a href="http://www.openwrt.org">OpenWrt</a> @TR<<or a close derivative>>.</p>
-
-<p>@TR<<GPL_Text#This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.>></p>
-
-</div></div> <!-- End scrollBox -->
-
-<? footer ?>
-<!--
-##WEBIF:name:Info:950:About
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces_old.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces_old.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-interfaces_old.sh	(working copy)
@@ -1,388 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. "/usr/lib/webif/webif.sh"
-###################################################################
-# VLAN configuration page
-#
-# Description:
-#	Configures any number of VLANs.
-#
-# Author(s) [in order of work date]:
-#	Jeremy Collake <jeremy.collake@gmail.com>
-#	pier11<pier11@operamail.com> port to UCI
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#	none
-#
-# Configuration files referenced:
-#   network
-#
-
-config_cb() {
-	cfg_type="$1"
-	cfg_name="$2"
-
-	case "$cfg_type" in
-	        interface)
-		        append networks "$cfg_name" "$N"
-	        ;;
-	        switch)
-		        append switch_interfaces "$cfg_name"
-	        ;;
-	esac
-}
-option_cb() {
-	local var_name="$1"; shift
-	local var_value="$*"
-
-	[ "$var_name" = "ifname" ] && [ "$cfg_type" = "interface" ] && eval "ifnames_${cfg_name}=\"$var_value\""
-}
-
-#Load settings from the network config file.	
-uci_load "network"
-networks=$(echo "$networks" |uniq)
-#Create network options list
-for network in $networks; do
-	append network_options "option|$network" "$N"
-done
-
-
-header "Network" "Interfaces" "@TR<<Interfaces>>" '' "$SCRIPT_NAME"
-
-if [ "$switch_interfaces" != "" ]; then
-	###################################################################
-	# toggles and default settings
-	#
-	ALLOW_VLAN_NUMBERING_GAPS=0 # toggle alowance of gaps, i.e. vlan0, vlan1, vlan5 are defined
-					# note: allowing gaps makes for a much slower loading page since
-					#  we have to search through MAX_VLANS instead of stopping at first
-					#  unset vlan variable.
-	PORT_BASE=0		# base number of the ports
-	PORT_COUNT=6		# number of ports (todo: should determine dynamically)
-	MAX_PORT=5		# maximum port number (todo: should determine dynamically)
-	MAX_VLANS=16		# limit the switch can handle on the bcm947xx (todo: dynamically determine)
-	MAX_VLANS_INDEX=15	# like MAX_VLANS, except starts at 0 instead of 1
-	#for later use
-	HELP_TEXT=
-	
-	###################################################################
-	# CountNumberOfVLANsThatContainPortX ( ### )
-	#
-	# used to test if a port is in another vlan, so we know if we should
-	# tag it or not. Returns count in RETURN_VAR.
-	#
-	# stops when it encounters more than 1...
-	#
-	CountNumberOfVLANsThatContainPortX ( )
-	{
-		RETURN_VAR=0
-		for count2 in $(seq "0" "$MAX_VLANS_INDEX"); do
-			eval current_vlan_value2=\$CONFIG_eth0_vlan${count2}
-			if [ -z "$current_vlan_value2" ]; then
-				break
-			fi
-			eval value="\"\$FORM_vlan_${count2}_port_${1}\""
-			equal "$value" "1" &&
-			{
-				let "RETURN_VAR+=1"
-				equal "$RETURN_VAR" "2" && break
-			}
-		done
-	}
-
-	###################################################################
-	# save settings or handle input
-	#
-	if ! empty "$FORM_submit"; then
-		SAVED=1
-
-		#
-		# handle add or remove
-		#
-		for count in $(seq 0 $MAX_VLANS_INDEX); do
-			eval current_vlan_value=\$CONFIG_eth0_vlan"$count"
-			if [ -z "$current_vlan_value" ]; then
-				let "count-=1"
-				break
-			fi
-		done
-
-		#
-		# now add or remove if appropriate. In WR we used vlanXhwname variable
-		#  as indication of the existance of the vlan, to allow for
-		#  empty vlans.
-		#
-
-		! empty "$FORM_remove_vlan" &&
-		{
-			uci_remove "network" "eth0" "vlan${count}"
-			let "count-=1"
-		}
-		highest_vlan=$count
-
-		#
-		# save VLAN configuration (also do add or remove)
-		#
-		for count in $(seq 0 $highest_vlan); do
-			current_vlan_opt_name=vlan"$count"
-			current_vlan_ports=""
-			for port_counter in $(seq $PORT_BASE $MAX_PORT); do
-
-				eval value="\"\$FORM_vlan_${count}_port_${port_counter}\""
-				if [ "$value" = "1" ]; then
-					if empty "$current_vlan_ports" ; then
-						current_vlan_ports="$port_counter"
-					else
-						current_vlan_ports="$current_vlan_ports $port_counter"
-					fi
-
-					#
-					# does port exist in alternate VLANs?
-					#
-					CountNumberOfVLANsThatContainPortX "$port_counter"
-					equal "$RETURN_VAR" "1" ||
-					{
-						current_vlan_ports="$current_vlan_ports*"
-					}
-				fi
-			done
-			uci_set "network" "eth0" "$current_vlan_opt_name" "$current_vlan_ports"
-			eval FORM_network_vlan="\$FORM_network_vlan$count"
-			for network in $networks; do
-				changed_ifname=0
-				interfaces=""
-				eval network_ifnames="\$ifname_$network"
-				echo $network_ifnames |grep -q "eth0.$count"
-				if [ "$?" = "0" ]; then
-					if [ "$FORM_network_vlan" != "$network" ]; then
-						for interface in $network_ifnames; do
-							if [ "$interface" != "eth0.$count" ]; then
-								#prevent lots of spaces from being added to the config file
-								if [ "$interfaces" != "" -a "$interface" != "" ]; then
-									interfaces="$interfaces $interface"
-									changed_ifname=1
-								elif [ "$interfaces" = "" -a "$interface" != "" ]; then
-									interfaces="$interface"
-									changed_ifname=1
-								fi
-							fi
-							changed_ifname=1
-						done
-					fi
-				else
-					if [ "$FORM_network_vlan" = "$network" ]; then
-						#prevent lots of spaces from being added to the config file
-						if [ "$network_ifnames" != "" ]; then
-							interfaces="$network_ifnames eth0.$count"
-							changed_ifname=1
-						else
-							interfaces="eth0.$count"
-							changed_ifname=1
-						fi
-						export ifname_$network="$interfaces"
-					fi
-				fi
-				if [ "$changed_ifname" = "1" ]; then
-					uci_set "network" "$network" "ifname" "$interfaces"
-				fi
-			done
-
-		done
-
-		! empty "$FORM_add_vlan" &&
-		{
-			let "count+=1"
-			uci_set "network" "eth0" "vlan${count}" "$MAX_PORT"
-		}
-
-		uci_load "network"
-	fi
-
-	####################################################################
-	# add headers for the port numbers
-	#
-	FORM_port_headers="string|<tr><th>&nbsp;</th>"
-	for current_port in $(seq $PORT_BASE $MAX_PORT); do
-		FORM_port_headers="${FORM_port_headers}<th>$current_port</th>"
-	done
-	FORM_port_headers="${FORM_port_headers}<td>Network</td></tr>"
-
-	####################################################################
-	# now create the vlan rows, one for each set vlan variable, even
-	#  if empty.
-	#
-	FORM_all_vlans="$FORM_port_headers"		# holds VLAN webif form we build
-	for count in $(seq "0" "$MAX_VLANS_INDEX"); do
-		vlanport="CONFIG_eth0_vlan${count}"
-		FORM_current_vlan="string|<tr><th>VLAN $count&nbsp;&nbsp;</th>"
-		#
-		# for each port, create a checkbox and mark if
-		#  port for in vlan
-		#
-		
-		#TODO: revisit for Kamikaze
-		#FORM_log_ipaddr=${log_ipaddr:-$(nvram get log_ipaddr)}
-		eval ports="\$$vlanport"
-		if [ -z "$ports" ]; then
-			if [ $ALLOW_VLAN_NUMBERING_GAPS = 1 ]; then
-				continue		# to allow vlan # gaps
-			else
-				break			# to disallow vlan # gaps
-			fi
-		fi
-		for current_port in $(seq $PORT_BASE $MAX_PORT); do
-			# if port in vlan, mark checkbox
-			port_included=0
-			# see if saved but uncommitted/applied or already set in form
-			eval value="\"\$FORM_vlan_${count}_port_${current_port}\""
-			eval value2="\"\$vlan_${count}_port_${current_port}\""
-			# set if committed
-			echo "$ports" | grep "$current_port" >> "/dev/null"  2>&1
-			if equal "$?" "0" || equal "$value" "1" || equal "$value2" "1" ; then
-				port_included=1
-			fi
-			variable_name="vlan_${count}_port_${current_port}"
-			checkbox_string="checkbox|$variable_name|$port_included|1|&nbsp;"
-			FORM_current_vlan="$FORM_current_vlan
-				string|<td>
-				$checkbox_string
-				string|</td>"
-		done
-
-		eval FORM_network_vlan="\$FORM_network_vlan$count"
-		if [ "$FORM_network_vlan" = "" ]; then
-			for network in $networks; do
-				config_get type $network type
-				if [ "$type" = "bridge" ]; then
-					#Use device to get the ifname of a bridged connection
-					config_get network_ifname $network device
-				else
-					eval network_ifname="\$ifnames_$network"
-				fi
-				echo $network_ifname |grep -q "eth0.$count"
-				if [ "$?" = "0" ]; then
-					FORM_network_vlan="$network"
-				fi
-			done
-		fi
-
-		FORM_all_vlans="$FORM_all_vlans
-			$FORM_current_vlan
-			string|<td>
-			select|network_vlan$count|$FORM_network_vlan
-			option|none|@TR<<None>>
-			$network_options
-			string|</td>
-			string|</tr>"
-	done
-	vlan_forms="start_form|@TR<<VLAN Configuration>>
-			helpitem|VLAN
-			helptext|Helptext VLAN#A virtual LAN is a set of ports that are bridged. In cases where a port belongs to more than one VLAN, a technique known as tagging is used to identify to which VLAN traffic on that port belongs.
-			$FORM_all_vlans
-			end_form
-			start_form|
-			submit|add_vlan|@TR<<Add New VLAN>>
-			submit|remove_vlan|@TR<<Remove Last VLAN>>
-			end_form"
-fi
-
-system_ifaces="$(ifconfig -a|grep eth |cut -d" " -f1)"
-for iface in $system_ifaces; do
-	for vlan_iface in $switch_interfaces; do
-		switching_iface=0
-		echo "$iface" |grep -q "$vlan_iface"
-		[ "$?" = "0" ] && switching_iface=1 ; break
-	done
-	if [ "$switching_iface" != "1" ]; then
-		eval FORM_network_iface="\$FORM_network_$iface"
-		if [ "$FORM_network_iface" = "" ]; then
-			for network in $networks; do
-				config_get type $network type
-				if [ "$type" = "bridge" ]; then
-					#Use device to get the ifname of a bridged connection
-					config_get network_ifname $network device
-				else
-					eval network_ifname="\$ifnames_$network"
-				fi
-				echo $network_ifname |grep -q "$iface"
-				if [ "$?" = "0" ]; then
-					FORM_network_iface="$network"
-				fi
-			done
-		fi
-		if [ "$FORM_submit" != "" ]; then
-			for network in $networks; do
-				changed_ifname=0
-				interfaces=""
-				config_get type $network type
-				if [ "$type" = "bridge" ]; then
-					#Use device to get the ifname of a bridged connection
-					config_get network_ifname $network device
-				else
-					eval network_ifname="\$ifnames_$network"
-				fi
-				echo $network_ifnames |grep -q "$iface"
-				if [ "$?" = "0" ]; then
-					if [ "$FORM_network_iface" != "$network" ]; then
-						for interface in $network_ifnames; do
-							if [ "$interface" != "$iface" ]; then
-								#prevent lots of spaces from being added to the config file
-								if [ "$interfaces" != "" -a "$interface" != "" ]; then
-									interfaces="$interfaces $interface"
-									changed_ifname=1
-								elif [ "$interfaces" = "" -a "$interface" != "" ]; then
-									interfaces="$interface"
-									changed_ifname=1
-								elif [ "$interfaces" = "" -a "$interface" = "" ]; then
-									changed_ifname=1
-								fi
-							fi
-							changed_ifname=1
-						done
-					fi
-				else
-					if [ "$FORM_network_iface" = "$network" ]; then
-						#prevent lots of spaces from being added to the config file
-						if [ "$network_ifnames" != "" ]; then
-							interfaces="$network_ifnames $iface"
-							changed_ifname=1
-						else
-							interfaces="$iface"
-							changed_ifname=1
-						fi
-					fi
-				fi
-				if [ "$changed_ifname" = "1" ]; then
-					uci_set "network" "$network" "ifname" "$interfaces"
-				fi
-			done
-		fi
-		interface_fields="
-		field|@TR<<Interface>> $iface
-		select|network_$iface|$FORM_network_iface
-		option|none|@TR<<None>>
-		$network_options"
-		append interface_form "$interface_fields" "$N"
-	fi
-done
-if [ "$interface_form" != "" ]; then
-	append interface_forms "start_form|@TR<<Interface Configuration>>" "$N"
-	append interface_forms "$interface_form" "$N"
-	append interface_forms "end_form" "$N"
-fi
-
-###################################################################
-# show form
-#
-display_form <<EOF
-onchange|modechange
-$vlan_forms
-$interface_forms
-EOF
-
- footer ?>
-<!--
-######WEBIF:name:Network:249:Interfaces
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/logout.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/logout.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/logout.sh	(working copy)
@@ -1,32 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# Logout
-#
-# Description:
-#       Logs user out.
-#
-# Author(s) [in order of work date]:
-#	Jeremy Collake <jeremy.collake@gmail.com>
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#
-# Configuration files referenced:
-#   none
-#
-header "Logout" "Logout" "@TR<<logout_close_window#You must close the web browser to log out!>>" '' ''
-cat <<EOF
-@TR<<logout_explanation#Since basic httpd authentication is cached by your web browser, it is not possible to automatically log a user out. You must close the web browser or, with Firefox, 'Clear Private Data', in order to force it to forget the credentials you have supplied. We will probably switch to cookie based authentication due to this inherit weakness in basic httpd authentication used commonly by firmwares.>>
-<br /><br />
-<div class="smalltext">
-@TR<<logout_reference#For a reference, see http://httpd.apache.org/docs/1.3/howto/auth.html>>
-</div>
-EOF
-#logout_user
-footer ?>
-<!--
-##WEBIF:name:Logout:1:Logout
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/system-ipkg.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/system-ipkg.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/system-ipkg.sh	(working copy)
@@ -1,231 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# Packages configuration page
-#
-# Description:
-#	Allows installation and removal of packages.
-#
-# Author(s) [in order of work date]:
-#   OpenWrt developers (??)
-#   todo: person who added descriptions..
-#   Dmytro
-#   eJunky
-#   emag
-#   Jeremy Collake <jeremy.collake@gmail.com>
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#   none
-#
-# Configuration files referenced:
-#   none
-#
-# Utilities/applets referenced:
-#   ipkg
-#
-#
-
-lists_path=$(cat /etc/opkg.conf 2>/dev/null | grep ^lists_dir | cut -d' ' -f3)
-if [ -z "$lists_path" ]; then
-	lists_path="/usr/lib/opkg/lists"
-else
-	lists_path="${lists_path%%/}"
-fi
-
-header "System" "Packages" "<img src=\"/images/pkg.jpg\" alt=\"\" />&nbsp;@TR<<system_ipkg_Packages#Packages>>" '' "$SCRIPT_NAME"
-
-cat <<EOF
-<script type="text/javascript">
-function confirmT(action,pkg) {
-if ( pkg == "uclibc" || pkg == "base-files" || pkg == "bridge" || pkg == "busybox" || pkg == "dnsmasq" || pkg == "dropbear" || pkg == "haserl" || pkg == "hotplug" || pkg == "iptables" || pkg == "kernel" || pkg == "mtd" || pkg == "wireless-tools" || pkg == "wlc") {
-alert ("             <<< @TR<<big_warning|WARNING>> >>> \n\n@TR<<system_ipkg_Package|Package>> \"" + pkg + "\" @TR<<should not be removed>>!\n\n>>> @TR<<Removing may brick your router.>> <<<\n\n@TR<<System requires>> \"" + pkg + "\" @TR<<package to run.>>\n\n") ;
-}
-var actionStr = action=="install" ? "@TR<<system_ipkg_install|install>>" : 
-	(action=="remove" ? "@TR<<system_ipkg_remove|remove>>" : action);
-if (window.confirm("@TR<<Please Confirm>>!\n\n@TR<<Do you want to>> " + actionStr + " \"" + pkg + "\" @TR<<system_ipkg_package|package>>?")){
-window.location="system-ipkg.sh?action=" + action + "&amp;pkg=" + pkg
-} }
-</script>
-EOF
-
-##################################################################
-#
-# Install from URL and Add Repository code - self-contained block.
-#
-
-repo_update_needed=0
-
-! empty "$FORM_install_url" && {
-	# just set up to pass-through to normal handler
-	FORM_action="install"
-	FORM_pkg="$FORM_pkgurl"
-}
-
-! empty "$FORM_install_repo" && {
-validate << EOF
-string|FORM_reponame|@TR<<system_ipkg_reponame#Repo. Name>>|min=4 max=40 required nospaces|$FORM_reponame
-string|FORM_repourl|@TR<<system_ipkg_repourl#Repo. URL>>|min=4 max=4096 required|$FORM_repourl
-EOF
-	if equal "$?" "0"; then
-		repo_update_needed=1
-		# since firstboot doesn't make a copy of ipkg.conf, we must do it
-		# todo: need a mutex or lock here
-		tmpfile=$(mktemp "/tmp/.webif-ipkg-XXXXXX")
-		cp -p "/etc/opkg.conf" "$tmpfile"
-		echo "src $FORM_reponame $FORM_repourl" > "$tmpfile"
-		cat "/etc/opkg.conf" >>"$tmpfile"
-		rm "/etc/opkg.conf"
-		mv "$tmpfile" "/etc/opkg.conf"
-	else
-		echo "<h3 class=\"warning\">$ERROR</h3>"
-	fi
-}
-
-! empty "$FORM_remove_repo_name" && ! empty "$FORM_remove_repo_url" && {
-	repo_update_needed=1
-	repo_src_line="src[\/gz]* $FORM_remove_repo_name $FORM_remove_repo_url"
-	remove_lines_from_file "$FORM_remove_repo_file" "$repo_src_line"
-	# manually remove package lists since ipkg update won't..
-	# todo: odd issue where 'rm -f /usr/lib/opkg/lists/* does not work - openwrt should investigate
-	rm "${lists_path}/$FORM_remove_repo_name" >&- 2>&-
-	echo "<br />Repository source was removed: $FORM_remove_repo_name<br />"
-}
-
-! empty "$FORM_update_package_lists" && repo_update_needed=1
-
-equal "$repo_update_needed" "1" && {
-	echo "<br />Repository sources updated. Performing update of package lists ...<br /><pre>"	
-	mkdir "$lists_path" >&- 2>&-
-	opkg update
-	echo "</pre>"
-}
-
-if [ "$FORM_action" = "install" ]; then
-	echo "<pre>@TR<<system_ipkg_pleasewait#Please wait>> ...<br />"
-	install_package `echo "$FORM_pkg" | sed -e 's, ,+,g'`
-	echo "</pre>"
-elif [ "$FORM_action" = "remove" ]; then
-	echo "<pre>@TR<<system_ipkg_pleasewait#Please wait>> ...<br />"
-	opkg remove `echo "$FORM_pkg" | sed -e 's, ,+,g'`
-	echo "</pre>"
-fi
-
-repo_list=$(awk '/^[[:space:]]*src[\/gz]*[[:space:]]/ { print "<tr class=\"repositories\"><td><a href=\"./system-ipkg.sh?remove_repo_file=" FILENAME "&amp;remove_repo_name=" $2 "&amp;remove_repo_url=" $3 "\">@TR<<system_ipkg_removerepo#remove>></a>&nbsp;&nbsp;" $2 "</td><td colspan=\"2\">" $3 "</td></tr>"}' /etc/opkg.conf /etc/opkg/*)
-
-display_form <<EOF
-start_form|@TR<<system_ipkg_addrepo#Add Repository>>
-field|@TR<<system_ipkg_reponame#Repo. Name>>
-text|reponame|$FORM_reponame|
-field|@TR<<system_ipkg_repourl#Repo. URL>>
-text|repourl|$FORM_repourl|
-field|&nbsp;
-submit|install_repo|@TR<<system_ipkg_addrepo#Add Repository>>|
-EOF
-?>
-</td></tr><tr><td colspan="2" class="repositories"><h4>@TR<<system_ipkg_currentrepos#Current Repositories>>:</h4></td></tr>
-<?
-echo "${repo_list}"
-display_form <<EOF
-helpitem|Add Repository
-helptext|HelpText Add Repository#A repository is a server that contains a list of packages that can be installed on your OpenWrt device. Adding a new one allows you to list packages here that are not shown by default.
-helpitem|Backports Tip
-helptext|HelpText Backports Tip#For a much larger assortment of packages, see if there is a backports repository available for your firmware.
-end_form
-start_form|@TR<<system_ipkg_installfromurl#Install Package From URL>>
-field|@TR<<system_ipkg_packageurl#URL of Package>>
-text|pkgurl|$FORM_pkgurl
-field|
-submit|install_url|@TR<<system_ipkg_installfromurl#Install Package From URL>>|
-helpitem|Install Package
-helptext|HelpText Install Package#Normally one installs a package by clicking on the install link in the list of packages below. However, you can install a package not listed in the known repositories here.
-end_form
-EOF
-
-# Block ends
-##################################################################
-
-display_form <<EOF
-start_form|@TR<<system_ipkg_packagesavailable#Packages Available>>|||nohelp
-field|&nbsp;
-submit|update_package_lists|@TR<<system_ipkg_updatelists#Update package lists>>|
-end_form
-EOF
-?>
-
-<div class="settings">
-<h3>@TR<<system_ipkg_installedpackages#Installed Packages>></h3>
-<div class="packages">
-<table>
-<tr>
-	<th width="150">@TR<<system_ipkg_th_action#Action>></th>
-	<th width="200">@TR<<system_ipkg_th_package#Package>></th>
-	<th width="150">@TR<<system_ipkg_th_version#Version>></th>
-	<th>@TR<<system_ipkg_th_desc#Description>></th>
-</tr>
-<?
-opkg list_installed |grep -e "Collected errors:" -e "has no architecture specified" -v | awk -F ' ' '
-($2 !~ /terminated/) && ($1 !~ /Done./) {
-	link=$1
-	gsub(/\+/,"%2B",link)
-	gsub(/^ */,"",link)
-	gsub(/ *$/,"",link)
-	version=$3
-	desc=$5
-	for (i=6; i <= NF; i++)
-			desc = desc " " $i
-	gsub(/&/, "\\&amp;", desc)
-	gsub(/</, "\\&lt;", desc)
-	gsub(/>/, "\\&gt;", desc)
-	print "<tr class=\"packages\"><td><a href=\"javascript:confirmT('\''remove'\'','\''" link "'\'')\">@TR<<system_ipkg_Uninstall#Uninstall>></a></td><td>" $1 "</td><td>" version "</td><td>" desc "</td></tr>"
-}
-'
-display_form <<EOF
-end_form
-EOF
-?>
-<div class="settings">
-<h3>@TR<<system_ipkg_availablepackages#Available packages>></h3>
-<div class="packages">
-<table>
-<tr>
-	<th width="150">@TR<<system_ipkg_th_action#Action>></th>
-	<th width="250">@TR<<system_ipkg_th_package#Package>></th>
-	<th width="150">@TR<<system_ipkg_th_version#Version>></th>
-	<th>@TR<<system_ipkg_th_desc#Description>></th>
-</tr>
-<?
-repo_list=$(awk -v lists="$lists_path" '/^[[:space:]]*src[\/gz]*[[:space:]]/ { printf " " lists "/" $2 }' /etc/opkg.conf)
-status_list=$(awk '/^[[:space:]]*dest[[:space:]]/ { if ($3 == "/") printf " /usr/lib/opkg/status"; else printf " "$3"/usr/lib/opkg/status" }' /etc/opkg.conf)
-[ -z "$status_list" ] && status_list="/usr/lib/opkg/status"
-egrep 'Package:|Description:|Version:' $status_list $repo_list 2>&- | sed -e 's, ,,' -e "s,^[^:]*${lists_path}/,," | awk -F: '
-$1 ~ /status/ {
-	installed[$3]++;
-}
-($1 !~ /terminated/) && ($1 !~ /\/status/) && (!installed[$3]) && ($2 !~ /Description/) && ($2 !~ /Version/) {
-	if (current != $1) print "<tr><th>" $1 "</th></tr>"
-	link=$3
-	gsub(/\+/,"%2B",link)
-	gsub(/^ */,"",link)
-	gsub(/ *$/,"",link)
-	getline verline
-	split(verline,ver,":")
-	getline descline
-	split(descline,desc,":")
-	gsub(/&/, "\\&amp;", desc[3])
-	gsub(/</, "\\&lt;", desc[3])
-	gsub(/>/, "\\&gt;", desc[3])
-	print "<tr class=\"packages\"><td><a href=\"javascript:confirmT('\''install'\'','\''" link "'\'')\">@TR<<system_ipkg_Install#Install>></a></td><td>" $3 "</td><td>" ver[3] "</td><td>" desc[3] "</td></tr>"
-	current=$1
-}
-'
-display_form <<EOF
-end_form
-EOF
-
-footer ?>
-<!--
-##WEBIF:name:System:300:Packages
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/system-startup.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/system-startup.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/system-startup.sh	(working copy)
@@ -1,209 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# startup
-#
-# Description:
-#	Custom startup configuration.
-#
-# Author(s) [in order of work date]:
-#       Jeremy Collake
-#       Lubos Stanek <lubek@users.berlios.de>
-#
-# Major revisions (ISO 8601):
-#       2007-04-14 - major update with enhancements
-#                    and port to Kamikaze
-#
-# NVRAM variables referenced:
-#       none
-#
-# Configuration files referenced:
-#   Kamikaze:
-#       /etc/init.d/custom-user-startup
-#	/etc/init.d/custom-user-startup-default
-#   White Russian:
-#	/etc/init.d/S95custom-user-startup
-#	/etc/init.d/.x95custom-user-startup-default
-#
-# Required components:
-#       /usr/lib/webif/common.awk
-#       /usr/lib/webif/browser.awk
-#       /usr/lib/webif/editor.awk
-#
-
-header_inject_head=$(cat <<EOF
-<script type="text/javascript">
-<!--
-function webif_entityDecode(s) {
-    var e = document.createElement("div");
-    e.innerHTML = s;
-    return e.firstChild.nodeValue;
-}
-
-var webif_printf=function() {
-	var num = arguments.length;
-	var output = arguments[0];
-	for (var i = 1; i < num; i++) {
-		var pattern = "\\\\{" + (i-1) + "\\\\}";
-		var re = new RegExp(pattern, "g");
-		output = output.replace(re, arguments[i]);
-	}
-	return output;
-}
-
-function confirm_deldir(path,file) {
-	if (window.confirm(webif_entityDecode(webif_printf("@TR<<big_warning#WARNING>>!\\n\\n@TR<<system_editor_ask_dir_deletition#Do you really want to delete the '{0}' directory>>?", file)))) {
-		window.location="$SCRIPT_NAME?path=" + escape(path) + "&amp;delpath=" + escape(file);
-	}
-}
-function confirm_delfile(path,file) {
-	if (window.confirm(webif_entityDecode(webif_printf("@TR<<big_warning#WARNING>>!\\n\\n@TR<<system_editor_ask_file_deletition#Do you really want to delete the '{0}/{1}' file>>?", path, file)))) {
-		window.location="$SCRIPT_NAME?path=" + escape(path) + "&amp;delfile=" + escape(file);
-	}
-}
--->
-</script>
-
-<style type="text/css">
-<!--
-#filebrowser table {
-	margin-left: 1em;
-	margin-right: 1em;
-	margin-bottom: 2.2em;
-	text-align: left;
-	font-size: 0.8em;
-	border-style: none;
-	border-spacing: 0;
-}
-#filebrowser td {
-	padding-left: 0.1em;
-	padding-right: 0.1em;
-}
-#filebrowser td.number {
-	text-align: right;
-}
-#filebrowser td.leftimage {
-	padding-left: 0em;
-}
-#filebrowser td.image {
-	text-align: center;
-}
-#filebrowser td.rightimage {
-	padding-right: 0em;
-}
-#filebrowser a.tooltip {
-	z-index: 3;
-}
-#filebrowser span.tooltip {
-	display: none;
-}
-#filebrowser a:hover.tooltip {
-	position: relative;
-}
-#filebrowser a:hover.tooltip span.tooltip {
-	z-index: 5;
-	display: block;
-	position: absolute;
-	top: 1.1em;
-	left: 1.8em;
-	width: 20em;
-	text-decoration: none;
-	padding: 3px;
-	border: 1px solid;
-	color: Black;
-	background-color: White;
-}
--->
-</style>
-
-EOF
-)
-
-! empty "$FORM_delpath" && {
-	cd / 2>/dev/null
-	ERROR=$(rmdir "$FORM_delpath" 2>&1)
-	equal "$?" "0" && {
-		SUCCESS=$(cat <<EOF
-@TR<<system_editor_info_dir_deleted#Directory was deleted successfully>>:<br/>
-<strong>$FORM_delpath</strong><br/><br/>
-EOF
-)
-	}
-}
-! empty "$FORM_delfile" && {
-	ERROR=$(rm "$FORM_path/$FORM_delfile" 2>&1)
-	equal "$?" "0" && {
-		SUCCESS=$(cat <<EOF
-@TR<<system_editor_info_file_deleted#File was deleted successfully>>:<br/>
-<strong>$FORM_path/$FORM_delfile</strong><br/><br/>
-EOF
-)
-	}
-}
-
-! equal "$ERROR" "" && ERROR="$ERROR<br />"
-
-FORM_path="${FORM_path:-/}"
-ERROR="$ERROR$(cd "$FORM_path" 2>&1)"
-cd "$FORM_path" 2>/dev/null
-while [ "$?" != "0" ]; do
-	FORM_path="${FORM_path%/*}"
-	FORM_path="${FORM_path:-/}"
-	cd "$FORM_path" 2>/dev/null
-done
-FORM_path="$(pwd)"
-# return to the cgi dir
-cd "${SCRIPT_NAME%/*}" 2>/dev/null
-
-header "System" "Startup" "@TR<<Startup>>" ''
-
-! empty "$SUCCESS" && echo "$SUCCESS"
-
-# defaults
-custom_script_name="/etc/init.d/custom-user-startup"
-startup_script_template="/etc/init.d/custom-user-startup-default"
-FORM_edit="custom-user-startup"
-FORM_path="/etc/init.d"
-edit_pathname="$FORM_path/$FORM_edit"
-saved_filename="/tmp/.webif/edited-files/$edit_pathname"
-
-! empty "$FORM_save" && {
-	SAVED=1
-	mkdir -p "/tmp/.webif/edited-files/$FORM_path"
-	echo "$FORM_filecontent" > "$saved_filename"
-	chmod 755 "$saved_filename"
-}
-
-empty "$FORM_cancel" || FORM_edit=""
-
-! exists "$custom_script_name" && ! exists "$saved_filename" && {
-	cp "$startup_script_template" "$custom_script_name"
-	chmod 755 "$custom_script_name"
-}
-
-if empty "$FORM_edit"; then
-	(ls -alLe "$FORM_path" 2>/dev/null | sed '/^[^d]/d';
-		ls -alLe "$FORM_path" 2>/dev/null | sed '/^[d]/d') 2>/dev/null | awk \
-		-v url="$SCRIPT_NAME" \
-		-v path="$FORM_path" \
-		-f /usr/lib/webif/common.awk \
-		-f /usr/lib/webif/browser.awk
-else
-	exists "$saved_filename" && {
-		edit_filename="$saved_filename"
-	} || {
-		edit_filename="$edit_pathname"
-	}
-	cat "$edit_filename" 2>/dev/null | awk \
-		-v url="$SCRIPT_NAME" \
-		-v path="$FORM_path" \
-		-v file="$FORM_edit" \
-		-f /usr/lib/webif/common.awk \
-		-f /usr/lib/webif/editor.awk
-fi
-
-footer ?>
-<!--
-##WEBIF:name:System:125:Startup
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-bandwidth.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-bandwidth.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-bandwidth.sh	(working copy)
@@ -1,89 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-. /www/cgi-bin/webif/graphs-subcategories.sh
-
-header "Graphs" "graphs_bandwidth_subcategory#Bandwidth" "@TR<<Bandwidth>>" 'onload="modechange()"' "$SCRIPT_NAME"
-if [ "$FORM_install_bandwidthd" != "" ]; then
-	echo "Installing $service package ...<pre>"
-	install_package bandwidthd
-	/etc/init.d/bandwidthd enable
-	/etc/init.d/bandwidthd start
-	echo "</pre>"
-fi
-is_package_installed bandwidthd
-[ "$?" = "0" ] && bandwidthd_installed=1
-[ "$FORM_timeline" = "" ] && FORM_timeline=1
-display_menu() {
-display_form <<EOF
-formtag_begin|filterform|$SCRIPT_NAME
-start_form
-field|@TR<<Mode>>
-select|timeline|$FORM_timeline
-option|1|@TR<<Daily>>
-option|2|@TR<<Weekly>>
-option|3|@TR<<Monthly>>
-option|4|@TR<<Yearly>>
-string|</td></tr><tr><td>
-submit|timelinesubmit|@TR<<Submit>>
-end_form
-EOF
-}
-if [ "$FORM_timeline" = "1" ]; then
-	cat /www/bandwidthd/index.html |grep -q "bandwidthd has nothing to graph."
-	[ "$?" = "0" ] && graphs=0
-else
-	cat /www/bandwidthd/index${FORM_timeline}.html |grep -q "bandwidthd has nothing to graph."
-	[ "$?" = "0" ] && graphs=0
-fi
-if [ "$bandwidthd_installed" != "1" ]; then
-display_form <<EOF
-string|<div class=\"warning\">@TR<<status_bandwidth_feature_requires_bandwidthd#Bandwidthd is not installed>>:</div>
-submit|install_bandwidthd|@TR<<system_settings_Install_Bandwidthd#Install Bandwidthd>>
-EOF
-elif [ "$graphs" != "0" ]; then
-	display_menu
-	echo "<center><table width="100%" border=1 cellspacing=0>"
-	if [ "$FORM_timeline" = "1" ]; then
-		cat /www/bandwidthd/index.html |grep "TR"
-	else
-		cat /www/bandwidthd/index${FORM_timeline}.html |grep "TR"
-	fi
-	echo "</table></center><br/>"
-	ips="`ls /www/bandwidthd/ |cut -d"-" -f1|egrep '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}'|uniq`"
-
-	cat <<EOF
-<a name="Total-${FORM_timeline}">
-<H2>Total</H2><BR>
-Send:<br>
-<img src=/bandwidthd/Total-${FORM_timeline}-S.png ALT="Sent traffic for Total"><BR>
-<img src=/bandwidthd/legend.gif ALT="Legend"><br>
-Received:<br>
-<img src=/bandwidthd/Total-${FORM_timeline}-R.png ALT="Sent traffic for Total"><BR>
-<img src=/bandwidthd/legend.gif ALT="Legend"><br>
-<BR>
-EOF
-
-	for ip in $ips; do
-		if [ -e /tmp/bandwidthd/${ip}-${FORM_timeline}-R.png ]; then
-		cat <<EOF
-<a name="${ip}-${FORM_timeline}">
-<a name="/bandwidthd/${ip}-${FORM_timeline}"></a><H2> ${ip}</H2><BR>
-Send:<br>
-<img src=/bandwidthd/${ip}-${FORM_timeline}-S.png ALT="Sent traffic for ${ip}"><BR>
-<img src=/bandwidthd/legend.gif ALT="Legend"><br>
-Received:<br>
-<img src=/bandwidthd/${ip}-${FORM_timeline}-R.png ALT="Sent traffic for ${ip}"><BR>
-<img src=/bandwidthd/legend.gif ALT="Legend"><br>
-<BR>
-EOF
-		fi
-	done
-else
-	display_menu
-	echo "@TR<<Bandwidth chart has not yet been generated, please try again later.>>"
-fi
-footer ?>
-<!--
-##WEBIF:name:Graphs:160:graphs_bandwidth_subcategory#Bandwidth
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-vnstat.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-vnstat.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-vnstat.sh	(working copy)
@@ -1,111 +0,0 @@
-#!/usr/bin/webif-page
-<?
-
-. /usr/lib/webif/webif.sh
-. /www/cgi-bin/webif/graphs-subcategories.sh
-
-header_inject_head=$(cat <<EOF
-    <script type="text/javascript" src="/webif.js"></script>
-    <style type="text/css">
-    <!--
-    a.graphs_vnstat_link:visited {
-        outline: none;
-    }
-    #graphs_vnstat_monthly {
-        padding-top: 2px;
-    }
-    -->
-    </style>
-EOF
-)
-
-header "Graphs" "graphs_vnstat_subcategory#Vnstat" "" "" ""
-has_pkgs vnstati
-
-LIB_D=${IPKG_INSTROOT}/var/lib/vnstat
-
-interfaces=$(ls $LIB_D)
-if [ -z "$interfaces" ]; then
-    echo "<pre>No database found, nothing to do. Use --help for help.</pre>"
-    echo "<br />"
-    echo "<pre>A new database can be created with the following command:</pre>"
-    echo "<pre>    vnstat -u -i eth0</pre>"
-    echo "<br />"
-    echo "<pre>Replace 'eth0' with the interface that should be monitored. A list</pre>"
-    echo "<pre>of available interfaces can be seen with the 'ifconfig' command.</pre>"
-else
-    BIN=${IPKG_INSTROOT}/usr/bin/vnstati
-    VAR_D=${IPKG_INSTROOT}/var/vnstat
-    WWW_D=${IPKG_INSTROOT}/www/vnstat
-
-    [ -d $VAR_D ] || mkdir -p $VAR_D
-    [ -d $WWW_D ] || mkdir -p $WWW_D
-
-    interfaces_count=$(ls $LIB_D | wc -l)
-    [ $interfaces_count -eq 1 ] && multiple=false || multiple=true
-
-    outputs="s h d t m"
-    $multiple && outputs="hs $outputs"
-
-    for interface in $interfaces; do
-        for output in $outputs; do
-            [ -L $WWW_D/vnstat_${interface}_${output}.png ] || ln -sf $VAR_D/vnstat_${interface}_${output}.png $WWW_D/vnstat_${interface}_${output}.png
-            $BIN -${output} -i $interface -c 15 -o $VAR_D/vnstat_${interface}_${output}.png
-        done
-cat <<EOF
-    <h2>Traffic of Interface $interface</h2>
-EOF
-        if $multiple; then
-cat <<EOF
-    <a class="graphs_vnstat_link" href="#" title="Click to see ${interface}'s Details" onclick="set_visible('${interface}_summary', false); set_visible('${interface}_details', true);">
-        <img id="${interface}_summary" src="/vnstat/vnstat_${interface}_hs.png" alt="${interface} Summary" />
-    </a>
-    <a class="graphs_vnstat_link" href="#" title="Click to see ${interface}'s Summary" onclick="set_visible('${interface}_details', false); set_visible('${interface}_summary', true);">
-        <table id="${interface}_details" summary="${interface} Details" style="display: none;">
-EOF
-        else
-cat <<EOF
-    <table id="${interface}_details" summary="${interface} Details">
-EOF
-        fi
-cat <<EOF
-        <tbody>
-            <tr>
-                <td>
-                    <img src="/vnstat/vnstat_${interface}_s.png" alt="${interface} Summary" />
-                </td>
-                <td>
-                    <img src="/vnstat/vnstat_${interface}_h.png" alt="${interface} Hourly" />
-                </td>
-            </tr>
-            <tr>
-                <td valign="top">
-                    <img src="/vnstat/vnstat_${interface}_d.png" alt="${interface} Daily" />
-                </td>
-                <td valign="top">
-                    <img src="/vnstat/vnstat_${interface}_t.png" alt="${interface} Top 10" />
-                    <br />
-                    <img id="graphs_vnstat_monthly" src="/vnstat/vnstat_${interface}_m.png" alt="${interface} Monthly" />
-                </td>
-            </tr>
-        </tbody>
-EOF
-        if $multiple; then
-cat <<EOF
-        </table>
-    </a>
-
-EOF
-        else
-cat <<EOF
-    </table>
-
-EOF
-        fi
-    done
-fi
-
-footer ?>
-<!--
-##WEBIF:name:Graphs:3:graphs_vnstat_subcategory#Vnstat
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/power-pulseaudio.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/power-pulseaudio.sh	(revision 0)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/power-pulseaudio.sh	(revision 0)
@@ -0,0 +1,287 @@
+#!/usr/bin/webif-page
+<?
+. /usr/lib/webif/webif.sh
+###################################################################
+timeout=60
+release=$(uci get powertools.@system[0].release)
+ifname=$(uci show -p/var/state network |grep "ipaddr=$SERVER_ADDR" | awk -F '=' '{print $1}' | awk -F'.' '{print $1"."$2}')
+RELEASE_VERSION=$(uci get powertools.@system[0].version)
+RELEASE_URL="http://xbox-remote.googlecode.com/svn/trunk/embeded-system/openwrt/$release/release"
+
+proto=$(uci get -p/var/state "$ifname".proto)
+
+if [ "$proto" == "static" ]; then
+  ns_result=$(nslookup "$release" | grep "Address" | grep "$release"  | awk '{print $3}')
+  if [ "$ns_result" == "$SERVER_ADDR" ]; then
+    RELEASE="$release"
+  else
+    RELEASE="$SERVER_ADDR"
+  fi
+else
+  hostname=$(uci get -p/var/state "$ifname".lease_hostname)
+  if [ "$hostname" != "" ]; then
+    RELEASE="$hostname"
+  else
+    RELEASE="$SERVER_ADDR"
+  fi
+fi
+
+header_inject_head=$(cat <<EOF
+<style type="text/css">
+<!--
+#modtable table {
+	width: 98%;
+	margin-left: auto;
+	margin-right: auto;
+	text-align: left;
+	font-size: 0.9em;
+	border-style: none;
+	border-spacing: 0;
+}
+#modtable td, th {
+	padding-left: 0.2em;
+	padding-right: 0.2em;
+}
+#modtable .number {
+	text-align: right;
+}
+-->
+</style>
+<meta http-equiv="refresh" content="$timeout"; />
+EOF
+
+)
+
+
+
+header "Power Tools" "PulseAudio" "@TR<<status_pulseaudio#PulseAudio Status>>"
+
+?>
+
+<div class="settings">
+USB sound card/speakers information can be found <a href="http://<? echo $RELEASE ?>/cgi-bin/webif/status-usb.sh">here</a>.</br></br>
+<h3><strong>@TR<<status_pulseaudio_sinks#Sinks>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr>
+	<th >@TR<<status_pulseaudio_sink_th_ID#Id>></th>
+	<th >@TR<<status_pulseaudio_sink_th_Name#Name>></th>
+        <th >@TR<<status_pulseaudio_sink_th_Sink_Steate#State>></th>
+	<th >@TR<<status_pulseaudio_sink_th_Driver#Driver>></th>
+	<th >@TR<<status_pulseaudio_sink_th_Format#Format>></th>
+	<th >@TR<<status_pulseaudio_sink_th_Channels#Channels>></th>
+	<th >@TR<<status_pulseaudio_sink_th_Sample_Rate#Sample Rate>></th>
+</tr>
+
+<?
+
+
+env HOME=/tmp pactl list short sinks 2>/dev/null  | awk  '
+BEGIN{
+	odd=1
+	tr_ind = ""
+	td_ind = "\t"
+}
+function oddline() {
+	if (odd == 1) {
+		print tr_ind "<tr>"
+		odd--
+	} else {
+		print tr_ind "<tr class=\"odd\">"
+		odd++
+	}
+}
+{
+	if (length($0) != 0) {
+		oddline()
+		print td_ind "<td >" $1 "</td>"
+		print td_ind "<td>" $2 "</td>"
+                        module = $3
+			format = $4
+                        channels = $5
+                        sample_rate = $6
+                        state = $7
+                        print td_ind "<td >" state "</td>"
+                        print td_ind "<td >" module "</td>"
+			print td_ind "<td>" format "</td>"
+			print td_ind "<td>" channels "</td>"
+		print td_ind "<td>" sample_rate "</td>"
+		print tr_ind "</tr>"
+	}
+}
+END{
+}
+'
+display_form <<EOF
+string|</tbody>
+end_form
+EOF
+
+
+?>
+
+<div class="settings">
+<h3><strong>@TR<<status_pulseaudio_sink_inputs#Sink Inputs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr>
+	<th >@TR<<status_pulseaudio_sink_inputs_th_ID#Id>></th>
+	<th >@TR<<status_pulseaudio_sink_inputs_th_Sink_ID#Sink Id>></th>
+        <th >@TR<<status_pulseaudio_sink_inputs_th_Client_ID#Client Id>></th>
+	<th >@TR<<status_pulseaudio_sink_inputs_th_Driver#Driver>></th>
+        <th >@TR<<status_pulseaudio_sink_inputs_th_Format#Format>></th>
+	<th >@TR<<status_pulseaudio_sink_inputs_th_Channels#Channels>></th>
+	<th >@TR<<status_pulseaudio_sink_inputs_th_Sample_Rate#Sample Rate>></th>
+</tr>
+<?
+
+
+env HOME=/tmp pactl list short sink-inputs 2>/dev/null  | awk  '
+BEGIN{
+	odd=1
+	tr_ind = ""
+	td_ind = "\t"
+}
+function oddline() {
+	if (odd == 1) {
+		print tr_ind "<tr>"
+		odd--
+	} else {
+		print tr_ind "<tr class=\"odd\">"
+		odd++
+	}
+}
+{
+	if (length($0) != 0) {
+		oddline()
+		print td_ind "<td >" $1 "</td>"
+		print td_ind "<td>" $2 "</td>"
+                if ($3 == "-") {
+                    client_id = "&nbsp;"
+                } else {
+                    client_id = $3
+                }
+		print td_ind "<td>" client_id "</td>"
+                print td_ind "<td>" $4 "</td>"
+                print td_ind "<td>" $5 "</td>"
+                print td_ind "<td>" $6 "</td>"
+                print td_ind "<td>" $7 "</td>"
+		print tr_ind "</tr>"
+	}
+}
+END{
+}
+'
+display_form <<EOF
+string|</tbody>
+end_form
+EOF
+
+?>
+
+<div class="settings">
+<h3><strong>@TR<<status_pulseaudio_clients#Clients>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr>
+	<th >@TR<<status_pulseaudio_clients_th_ID#Id>></th>
+        <th >@TR<<status_pulseaudio_clients_th_Name#Name>></th>
+	<th >@TR<<status_pulseaudio_clients_th_Driver#Driver>></th>
+</tr>
+<?
+
+
+env HOME=/tmp pactl list short clients 2>/dev/null  | awk  '
+BEGIN{
+	odd=1
+	tr_ind = ""
+	td_ind = "\t"
+}
+function oddline() {
+	if (odd == 1) {
+		print tr_ind "<tr>"
+		odd--
+	} else {
+		print tr_ind "<tr class=\"odd\">"
+		odd++
+	}
+}
+{
+	if (length($0) != 0) {
+		oddline()
+		print td_ind "<td >" $1 "</td>"
+                driver=$2
+                name=$3
+		print td_ind "<td>" name "</td>"
+		print td_ind "<td>" driver"</td>"
+		print tr_ind "</tr>"
+	}
+}
+END{
+}
+'
+display_form <<EOF
+string|</tbody>
+end_form
+EOF
+
+
+cat << EOF
+<div class="settings">
+<h3><strong>@TR<<status_pulseaudio_logs#Logs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+<tr>
+	<th > Time in 
+EOF
+uci get system.@system[0].timezone
+cat << EOF
+</th>
+        <th >@TR<<status_pulseaudio_clients_th_Entry#Log Entry>></th>
+</tr>
+EOF
+
+
+logread 2>/dev/null  | grep [pulseaudio]  | awk '{ x = $0 "\n" x } END { printf "%s", x }'  | awk  '
+BEGIN{
+	odd=1
+	tr_ind = ""
+	td_ind = "\t"
+}
+function oddline() {
+	if (odd == 1) {
+		print tr_ind "<tr>"
+		odd--
+	} else {
+		print tr_ind "<tr class=\"odd\">"
+		odd++
+	}
+}
+{
+	if (length($0) != 0) {
+		oddline()
+		print td_ind "<td >" $1" "$2" "$3 "</td>"
+                print td_ind "<td>"
+                for (i=8; i<=NF; i++) {
+                printf ("%s ", $i)
+                }
+                print "</td>"
+		print tr_ind "</tr>"
+	}
+}
+END{
+}
+'
+display_form <<EOF
+string|</tbody>
+end_form
+EOF
+
+footer ?>
+<!--
+##WEBIF:name:Power Tools:030:PulseAudio
+-->

Property changes on: feeds/xwrt/webif/files/www/cgi-bin/webif/power-pulseaudio.sh
___________________________________________________________________
Added: svn:executable
   + *

Index: feeds/xwrt/webif/files/www/cgi-bin/webif/status-wwaninfo.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/status-wwaninfo.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/status-wwaninfo.sh	(working copy)
@@ -1,273 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-
-header_inject_head=$(cat <<EOF
-<style type="text/css">
-/*<![CDATA[*/
-<!--
-
-#wwanbars * { padding: 0; margin: 0; }
-
-#wwanbars body {
-	font-family: Verdana;
-	font-size: 1em;
-	line-height: 1em;
-	padding: 1em;
-}
-
-#wwanbars .wwan_status { padding-top: 5em; }
-
-#wwanbars ul { list-style-type: none; }
-
-#wwanbars ul li { clear: both; height: 1.2em; }
-
-#wwanbars .title { width: 10em; float: left; }
-
-#wwanbars .progress {
-	text-align: right;
-	display: block;
-	float: left;
-	clear: right;
-	font-size: 0.964em;
-	padding: 0.1em;
-	margin-bottom: 0.2em;
-}
-
-#wwanbars h4 { display: none; }
-
-/* Legend */
-
-#wwanbars .legend {
-	position: absolute;
-	margin-top: -5.3em;
-	margin-left: 10em;
-	clear: both;
-	width: 30em;
-	border-left: 1px solid Gray;
-	border-right: 1px solid Gray;
-}
-
-#wwanbars dl {
-	float: left;
-	text-align: center;
-	width: 30%;
-	font-size: 0.8em;
-	line-height: 1.5em;
-}
-
-#wwanbars dl.workable { width: 16%; }
-
-#wwanbars dl.good { width: 16%; }
-
-#wwanbars dl.excellent { width: 38%; }
-
-#wwanbars dl+dl dt, dl+dl dd { border-left: 1px solid Gray; }
-
-#wwanbars dd .title { display: none; }
-
-#wwanbars dd.dbm { margin-top: 4em; }
-
-/* Colors for status health */
-
-#wwanbars dl.unreliable dt, span.progress.unreliable { background-color: #ff7474; }
-
-#wwanbars dl.workable dt, span.progress.workable { background-color: #fffa74; }
-
-#wwanbars dl.good dt, span.progress.good { background-color: #ace4ff; }
-
-#wwanbars dl.excellent dt, span.progress.excellent { background-color: #6fff6c; }
-
--->
-/*]]>*/
-</style>
-
-EOF
-)
-
-# the comgt package has changed the executable
-COMGT=$(which comgt 2>/dev/null)
-empty "$COMGT" && COMGT=$(which gcom 2>/dev/null)
-# the webif^2's comgt query script
-COMGTWEBIF="/usr/lib/webif/comgt.webif"
-
-[ -x "$COMGT" ] && [ -s "$COMGTWEBIF" ] && {
-	DEVICES="/dev/usb/tts/2 /dev/noz2"
-	for DEV in $DEVICES
-	do
-		[ -c "$DEV" ] && [ -x "$COMGT" ] && {
-			INFO=$($COMGT -d "$DEV" -s "$COMGTWEBIF" 2>/dev/null)
-			STRENGTH=$(echo "$INFO" | grep "+CSQ:" | cut -d: -f2 | cut -d, -f1)
-			CHARGING=$(echo "$INFO" | grep "+CBC:" | cut -d: -f2 | cut -d, -f1)
-			CAPACITY=$(echo "$INFO" | grep "+CBC:" | cut -d: -f2 | cut -d, -f2)
-		}
-	done
-}
-
-header "Status" "UMTS" "@TR<<status_wwaninfo_UG_Status#UMTS/GPRS Status>>"
-
-equal "$INFO" "" && {
-	cat << EOF
-<p>@TR<<status_wwaninfo_no_UG_device#UMTS / GPRS device not found.>></p>
-EOF
-	equal "$COMGT" "" || equal "$COMGTWEBIF" "" && {
-		cat << EOF
-<p>@TR<<status_wwaninfo_no_req_app#The required components are missing. Please install the latest <a href="system-ipkg.sh">comgt</a> package and <a href="info.sh">webif&sup2;</a>.>></p>
-EOF
-	}
-	footer
-	exit
-}
-
-cat << EOF
-<div class="settings">
-<h3><strong>@TR<<status_wwaninfo_device_info#Device Information>></strong></h3>
-<table style="text-align: left;" border="0" cellpadding="3" cellspacing="3">
-<tbody>
-EOF
-
-if ! empty "$INFO"; then
-	echo "$INFO" | awk -F: '
-		BEGIN {
-			print "	<tr>"
-			print "		<th>@TR<<status_wwaninfo_dev_th_Information#Information>></th>"
-			print "		<th>@TR<<status_wwaninfo_dev_th_Value#Value>></th>"
-			print "	</tr>"
-			odd=1
-		}
-		/^[#+ ]/ {next}
-		{
-			if (length($2) > 0) {
-				if (odd == 1) {
-					print "	<tr>"
-					odd--
-				} else {
-					print "	<tr class=\"odd\">"
-					odd++
-				}
-				col2=$2
-				for (i=3; i<=NF; i++)
-					col2 = col2 ":" $i
-				print "		<td>" $1 "</td>"
-				print "		<td>" col2 "</td>"
-				print "	</tr>"
-			}
-		}'
-else
-	cat << EOF
-	<tr>
-		<td colspan="2">@TR<<status_wwaninfo_no_UG_device_info#No device information reported.>></td>
-	</tr>
-EOF
-fi
-
-cat << EOF
-</tbody>
-</table>
-</div>
-<br />
-EOF
-
-[ "$CHARGING" -ge 0 ] >/dev/null 2>&1 &&  [ "$CAPACITY" -ge 0 ] >/dev/null 2>&1 && {
-	[  "$CHARGING" -eq 0 ] && charg_text="@TR<<status_wwaninfo_Notcharging#Not charging>>" || charg_text="@TR<<status_wwaninfo_Charging#Charging>>"
-	display_form << EOF
-start_form|@TR<<status_wwaninfo_Battery_Status#Battery Status>>
-field|@TR<<status_wwaninfo_Status#Status>>
-string|<div style="text-align: left">$charg_text</div>
-field|@TR<<status_wwaninfo_Capacity#Capacity>>
-progressbar|capacity||200|$CAPACITY|${CAPACITY}%||
-end_form
-EOF
-}
-
-! empty "$STRENGTH" && {
-	cat << EOF
-<div class="settings">
-<h3><strong>@TR<<status_wwaninfo_Signal_Quality#Signal Quality>></strong></h3>
-EOF
-
-	# check if numeric
-	[ "$STRENGTH" -ge 0 ] >/dev/null 2>&1 && {
-		if [ "$STRENGTH" -gt 31 ]; then
-			echo "<p>@TR<<status_wwaninfo_quality_unknown#Signal quality is invalid/unknown>>: ${STRENGTH}</p>"
-		else
-			progress_type="unreliable"
-			[ "$STRENGTH" -gt 9 ] && progress_type="workable"
-			[ "$STRENGTH" -gt 14 ] && progress_type="good"
-			[ "$STRENGTH" -gt 19 ] && progress_type="excellent"
-			cat << EOF
-<div id="wwanbars"><div class="wwan_status">
-	<ul>
-		<li>
-			<span class="title">@TR<<status_wwaninfo_Signal_Quality#Signal Quality>>:</span> <span class="progress ${progress_type}" style="width: ${STRENGTH}em;">${STRENGTH}</span>
-		</li>
-		<li>
-			<span class="title">@TR<<status_wwaninfo_Power_Ratio#Power (dBm)>>:</span> <span class="progress ${progress_type}" style="width: ${STRENGTH}em;">$((-113 + $STRENGTH * 2))</span>
-		</li>
-	</ul>
-	<h4>@TR<<status_wwaninfo_Legend#Legend>>:</h4>
-	<div class="legend">
-		<dl class="unreliable">
-EOF
-			if equal "$progress_type" "unreliable"; then
-				echo "			<dt><strong>@TR<<status_wwaninfo_quality_Unreliable#Unreliable>></strong></dt>"
-			else
-				echo "			<dt>@TR<<status_wwaninfo_quality_Unreliable#Unreliable>></dt>"
-			fi
-			cat << EOF
-			<dd><span class="title">@TR<<status_wwaninfo_Signal_Quality#Signal Quality>>:</span> 0..9</dd>
-			<dd class="dbm"><span class="title">@TR<<status_wwaninfo_Power_Ratio#Power (dBm)>>:</span> -113..-95</dd>
-		</dl>
-		<dl class="workable">
-EOF
-			if equal "$progress_type" "workable"; then
-				echo "			<dt><strong>@TR<<status_wwaninfo_quality_Workable#Workable>></strong></dt>"
-			else
-				echo "			<dt>@TR<<status_wwaninfo_quality_Workable#Workable>></dt>"
-			fi
-			cat << EOF
- 			<dd><span class="title">@TR<<status_wwaninfo_Signal_Quality#Signal Quality>>:</span> 10..14</dd>
-			<dd class="dbm"><span class="title">@TR<<status_wwaninfo_Power_Ratio#Power (dBm)>>:</span> -93..-85</dd>
-		</dl>
-		<dl class="good">
-EOF
-			if equal "$progress_type" "good"; then
-				echo "			<dt><strong>@TR<<status_wwaninfo_quality_Good#Good>></strong></dt>"
-			else
-				echo "			<dt>@TR<<status_wwaninfo_quality_Good#Good>></dt>"
-			fi
-			cat << EOF
-			<dd><span class="title">@TR<<status_wwaninfo_Signal_Quality#Signal Quality>>:</span> 15..19</dd>
-			<dd class="dbm"><span class="title">@TR<<status_wwaninfo_Power_Ratio#Power (dBm)>>:</span> -83..-75</dd>
-		</dl>
-		<dl class="excellent">
-EOF
-			if equal "$progress_type" "excellent"; then
-				echo "			<dt><strong>@TR<<status_wwaninfo_quality_Excellent#Excellent>></strong></dt>"
-			else
-				echo "			<dt>@TR<<status_wwaninfo_quality_Excellent#Excellent>></dt>"
-			fi
-			cat << EOF
-			<dd><span class="title">@TR<<status_wwaninfo_Signal_Quality#Signal Quality>>:</span> 20..31</dd>
-			<dd class="dbm"><span class="title">@TR<<status_wwaninfo_Power_Ratio#Power (dBm)>>:</span> -73..-51</dd>
-		</dl>
-	</div>
-</div></div>
-<br />
-EOF
-		fi
-	} || {
-		echo "<p>@TR<<status_wwaninfo_wrong_value#Wrong signal quality value>>: ${STRENGTH}</p>"
-	}
-}
-
-cat << EOF
-</div>
-<br />
-EOF
-
-footer
-?>
-<!--
-##WEBIF:name:Status:170:UMTS
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-subcategories.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-subcategories.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/graphs-subcategories.sh	(working copy)
@@ -8,8 +8,6 @@
 	[ -s "$cachedir/graphs" ] || {          # create a cache if it does not exists already
 		[ -d "$cachedir" ] || mkdir "$cachedir" 2>/dev/null 1>&2
 		(echo "Graphs:10:CPU:graphs-cpu.sh"
-		 echo "Graphs:20:Bandwidth:graphs-bandwidth.sh"
-		 echo "Graphs:30:Vnstat:graphs-vnstat.sh"
 		 grep -v -e "mon." -e "ifb[0-9]" /proc/net/dev |sed -n -e "/:/"'{s/:.*//;s/^ *\(.*\)/Graphs:50:Traffic\>\> \1@TR\<\<:graphs-if.sh?if=\1/;p}' 2>/dev/null
 		) | sort -n >$cachedir/graphs
 	}
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/power-network.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/power-network.sh	(revision 0)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/power-network.sh	(revision 0)
@@ -0,0 +1,189 @@
+#!/usr/bin/webif-page
+<?
+. /usr/lib/webif/webif.sh
+. /lib/network/networkmode.sh
+
+timeout=60
+if ! empty "$FORM_reboot"; then
+	release=$(uci get powertools.@system[0].release)
+        ifname=$(uci show -p/var/state network |grep "ipaddr=$SERVER_ADDR" | awk -F '=' '{print $1}' | awk -F'.' '{print $1"."$2}')
+	proto=$(uci get -p/var/state "$ifname".proto)
+        WIFI_UID=$(cat /sys/class/net/wlan0/address | awk -F':' '{print $5$6}')
+	
+	if [ "$proto" == "static" ]; then
+	  ns_result=$(nslookup "$release" | grep "Address" | grep "$release"  | awk '{print $3}')
+	  if [ "$ns_result" == "$SERVER_ADDR" ]; then
+	    RELEASE="$release"
+	  else
+	    RELEASE="$SERVER_ADDR"
+	  fi
+	else
+	  hostname=$(uci get -p/var/state "$ifname".lease_hostname)
+	  if [ "$hostname" != "" ]; then
+	    RELEASE="$hostname"
+	  else
+	    RELEASE="$SERVER_ADDR"
+	  fi
+	fi
+        UID=$(uci get powertools.@system[0].uid)
+        if [ "$FORM_enable_uid" == "1" ]; then
+          if [ "$WIFI_UID" != "$UID" ]; then
+            uci set powertools.@system[0].uid=$WIFI_UID
+            uci commit
+            if [ "$release""-alt" == "$RELEASE" ]; then
+              RELEASE="$release""-""$WIFI_UID""-alt"
+            fi
+	    if [ "$release" == "$RELEASE" ]; then
+              RELEASE="$RELEASE""-""$WIFI_UID"
+            fi
+          fi
+        else
+          if [ "$UID" != "" ]; then
+            uci delete  powertools.@system[0].uid
+            uci commit
+            if  [ "$release""-""$WIFI_UID""-alt" == "$RELEASE" ]; then
+              RELEASE="$release""-alt"
+            fi
+	    if  [ "$release""-""$WIFI_UID" == "$RELEASE" ]; then
+	      RELEASE="$release"
+            fi
+          fi
+        fi
+
+	header_inject_head="<meta http-equiv=\"refresh\" content=\"$timeout;http://$RELEASE\" />"
+	reboot_msg="@TR<<Netowork Reconfigured. Rebooting now>>...
+<br/><br/>
+@TR<<reboot_wait#Please wait about>> $timeout @TR<<reboot_seconds#seconds.>> @TR<<reboot_reload#The webif&sup2; should automatically reload.>>
+<br/><br/>
+<center>
+<script type=\"text/javascript\">
+<!--
+var bar1=createBar(350,15,'white',1,'black','blue',85,7,3,'');
+-->
+</script>
+</center>"
+fi
+
+header "Power Tools" "Network" "@TR<<Network Mode Selection>>" '' "$SCRIPT_NAME"
+
+if empty "$FORM_reboot"; then
+current_mode=$(uci get powertools.@system[0].mode)
+if empty "$current_mode"; then
+current_mode=1
+fi
+display_form <<EOF
+start_form|@TR<<WIFI Station Settings>>
+field|@TR<<ESSID>>
+text|ssid|$(uci get wireless.@wifi-iface[1].ssid)
+field|@TR<<KEY>>
+password|key|$(uci get wireless.@wifi-iface[1].key)
+EOF
+cat << EOF
+</td></tr><tr><td class="wr_client"><h5>&nbsp;</h5></td></tr>
+</td></tr><tr><td class="wr_client"><h5>@TR<<WR703N as a wifi station>>:</h5></td></tr>
+<tr class="wr_client"><td><p><font size="2">Optionally WR703N can be configured to connect to an external wifi AP, i.e. as a wifi client/station.</font></p></td></tr>
+EOF
+display_form <<EOF
+helpitem|WiFi SSID
+helptext|HelpText WiFi SSID#The wifi network name. Only WPA-PSK and WPA-PSK2 protected wifi network is supported.
+helpitem|Wifi Key
+helptext|HelpText WiFi Key#The wifi key for the network you want to connect. 
+end_form
+EOF
+release=$(uci get powertools.@system[0].release)
+WIFI_UID=$(cat /sys/class/net/wlan0/address | awk -F':' '{print $5$6}')
+UID=$(uci get powertools.@system[0].uid)
+if [ "$UID" != "$WIFI_UID" ]; then
+  uid_state=0
+else
+  uid_state=1
+fi
+
+display_form <<EOF
+start_form|@TR<<Unique Device ID>>
+field|@TR<<UID>>
+string|<input id="show_UID" type="text" style="width: 40%; height: 1.2em; color: #2f2f2f; background: #ececec; " name="show_UID" readonly="readonly" value="$WIFI_UID" />
+field|@TR<<>>
+radio|enable_uid|$uid_state|0|@TR<<Disabled>>
+radio|enable_uid|$uid_state|1|@TR<<Enabled>>
+EOF
+cat << EOF
+</td></tr><tr><td class="wr_client"><h5>&nbsp;</h5></td></tr>
+</td></tr><tr><td class="wr_client"><h5>@TR<<UID>>:</h5></td></tr>
+<tr class="wr_client"><td><p><font size="2">UID is taken from the last 4 letters from the mac address which is printed on the back of the WR703N.</font></p></td></tr>
+EOF
+display_form <<EOF
+helpitem|UID
+helptext|HelpText UID#If you have multiple WR703Ns running on the same network it will be desirable to turn on Unique Device ID and you will then be able to access it from <a href="http://$release-$WIFI_UID">$release-$WIFI_UID</a>.
+end_form
+EOF
+
+
+cat << EOF
+<div class="settings">
+<h3><strong>@TR<<Mode#Available Modes>></strong></h3>
+<div id="modtable">
+<div class="settings-content">
+<table width="100%" >
+<tbody>
+EOF
+for display_mode in 1 2 3; do
+  case $display_mode in
+    1) message="Mode 1: eth0, wlan0 as bridged lan; wlan1 and usb0 as two wans" ;;
+    2) message="Mode 2: wlan0 as lan; eth0, wlan1 and usb0 as three wans" ;;
+    3) message="Mode 3: wlan0 as lan; eth0, wlan1 as bridged WDS wan and usb0 as 2nd wan" ;;
+  esac
+  if [ "$display_mode" == "$current_mode" ]; then
+    echo "<tr><td> <input type=\"radio\" name=\"mode\" value=\"$display_mode\" checked=\"checked\" > $message </td></tr>"
+  else
+    echo "<tr><td> <input type=\"radio\" name=\"mode\" value=\"$display_mode\" > $message </td></tr>"
+  fi
+echo "<tr><td> &nbsp; </td></tr>"
+done
+echo "<tr><td> <input type=\"submit\" name=\"reboot\" value=\" Set Network Mode \" /> </td></tr>"
+cat << EOF
+</tbody>
+</table>
+</div>
+</div>
+<div class="clearfix">&nbsp;</div></div>
+EOF
+
+else
+  cat << EOF
+<div class="settings">
+<h3><strong>@TR<<Logs#Network Reconfiguration Logs>></strong></h3>
+<div id="modtable">
+<table>
+<tbody>
+EOF
+  switch_network_mode $FORM_mode $FORM_ssid $FORM_key
+  echo "<tr><td>Netowork Reconfigured. Rebooting now ...</td></tr>"
+  echo "<tr class=\"odd\"><td>Please wait about $timeout seconds. The webif&sup2; should automatically reload.</td></tr>"
+cat << EOF
+</tbody>
+</table>
+</div>
+<div class="clearfix">&nbsp;</div></div>
+<br/><br/><br/>
+<table width="90%" border="0" cellpadding="2" cellspacing="2" align="center">
+<tr>
+<td><script type="text/javascript" src="/js/progress.js"></script>
+<center>
+<script type="text/javascript">
+<!--
+var bar1=createBar(350,15,'white',1,'black','blue',85,7,3,'');
+-->
+</script>
+</center>
+<br/><br/><br/></td>
+</tr>
+</table>
+EOF
+
+reboot -d 5 &
+fi
+?>
+<!--
+##WEBIF:name:Power Tools:010:Network
+-->

Property changes on: feeds/xwrt/webif/files/www/cgi-bin/webif/power-network.sh
___________________________________________________________________
Added: svn:executable
   + *

Index: feeds/xwrt/webif/files/www/cgi-bin/webif/status-qos.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/status-qos.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/status-qos.sh	(working copy)
@@ -1,221 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# QoS status page
-#
-# Description:
-#	Shows QoS numbers.
-#
-# Author(s) [in order of work date]:
-#	Original webif developers
-#	Jeremy Collake <jeremy.collake@gmail.com>
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#	none
-#
-# Configuration files referenced:
-#	/etc/config/qos
-#
-
-header_inject_head=$(cat <<EOF
-<style type="text/css">
-<!--
-.qostable table {
-	margin-left: 2em;
-	margin-right: 2em;
-	border-style: none;
-	border-spacing: 0;
-	padding: 0.5em;
-	padding-bottom: 1em;
-}
-.qostable th,
-.qostable td {
-	text-align: right;
-	padding-top: 0.30em;
-	padding-bottom: 0.30em;
-	padding-left: 0.30em;
-	padding-right: 0.30em;
-}
-.qostable th.text,
-.qostable td.text {
-	text-align: left;
-}
-.qosraw table {
-	width: 90%;
-	border-style: none;
-	border-spacing: 0;
-}
-.qosraw th,
-.qosraw td {
-	text-align: left;
-}
--->
-</style>
-
-EOF
-)
-
-header "Status" "QoS" "@TR<<Quality of Service Statistics>>"
-
-gress_stats() {
-	awk \
-		-v root_class="$root_class" \
-		-v parent_class="$parent_class" \
-		-v priority_class="$priority_class" \
-		-v express_class="$express_class" \
-		-v normal_class="$normal_class" \
-		-v bulk_class="$bulk_class" \
-	'BEGIN {
-		total_packets = 0
-		total_bytes = 0
-	}
-	function bytes2human(num) {
-		if (num == "") return "&nbsp;"
-		if (num >= 2 ** 30) {
-			return sprintf("(%.1f @TR<<GiB>>)", num / (2 ** 30))
-		} else if (num >= 2 ** 20) {
-			return sprintf("(%.1f @TR<<MiB>>)", num / (2 ** 20))
-		} else if (num >= 2 ** 10) {
-			return sprintf("(%.1f @TR<<KiB>>)", num / (2 ** 10))
-		} else {
-			return "&nbsp;"
-		}
-	}
-	/class/ {
-		if ($3 != root_class && $3 != parent_class) {
-			if ($3 == priority_class) {
-				class="@TR<<qos_class_Priority#Priority>>"
-			} else if ($3 == express_class) {
-				class="@TR<<qos_class_Express#Express>>"
-			} else if ($3 == normal_class) {
-				class="@TR<<qos_class_Normal#Normal>>"
-			} else if ($3 == bulk_class) {
-				class="@TR<<qos_class_Bulk#Bulk>>"
-			} else {
-				class="@TR<<qos_class_Unknown#Unknown>> " $3
-			}
-			getline
-			if (length($0) > 0) {
-				print "<tr>"
-				print "	<td class=\"text\">" class "</td>"
-				print "	<td>" $4 "</td>"
-				total_packets += $4
-				print "	<td>" $2 "</td>"
-				total_bytes += $2
-				print "	<td>" bytes2human($2) "</td>"
-				print "</tr>"
-			}
-		}
-	}
-	END {
-		print "<tr>"
-			print "	<td class=\"text\">@TR<<qos_line_Total#Total>></td>"
-			print "	<td>" total_packets "</td>"
-			print "	<td>" total_bytes "</td>"
-			print "	<td>" bytes2human(total_bytes) "</td>"
-		print "</tr>"
-	}'
-}
-
-uci_load "qos"
-if equal "$CONFIG_wan_enabled" "1"; then
-
-	# todo: don't do these statically..
-	root_class="1:"
-	parent_class="1:1"
-	priority_class="1:10"
-	express_class="1:20"
-	normal_class="1:30"
-	bulk_class="1:40"
-
-	qos_status=$(qos-stat 2>&-)
-	if ! empty "$qos_status" && exists "/usr/bin/qos-stat"; then
-		ingress_start_line=$(echo "$qos_status" | grep INGRESS -n | cut -d ':' -f 1)
-		ingress_start_line=$(( $ingress_start_line - 2 )) 2>/dev/null
-		egress_status=$(echo "$qos_status" | sed "$ingress_start_line,\$ d")
-		ingress_status=$(echo "$qos_status" | sed "1,$ingress_start_line d")
-		ingress_stats_table=$(echo -e "$ingress_status\n" | gress_stats)
-		cat <<EOF
-<div class="settings">
-<h3><strong>@TR<<Incoming Traffic>></strong></h3>
-<div id="qostable1" class="qostable">
-<table summary="@TR<<Incoming Traffic>>">
-<tbody>
-<tr>
-	<th class="text">@TR<<Class>></th>
-	<th>@TR<<Packets>></th>
-	<th>@TR<<Bytes>></th>
-	<th>&nbsp;</th>
-</tr>
-$ingress_stats_table
-</tbody>
-</table>
-</div>
-EOF
-		egress_stats_table=$(echo -e "$egress_status\n" | gress_stats)
-		cat <<EOF
-<h3><strong>@TR<<Outgoing Traffic>></strong></h3>
-<div id="qostable2" class="qostable">
-<table summary="@TR<<Outgoing Traffic>>">
-<tbody>
-<tr>
-	<th class="text">@TR<<Class>></th>
-	<th>@TR<<Packets>></th>
-	<th>@TR<<Bytes>></th>
-	<th>&nbsp;</th>
-</tr>
-$egress_stats_table
-</tbody>
-</table>
-</div>
-<div class="settings-content">
-<table>
-EOF
-		display_form <<EOF
-field||spacer1
-string|<br /><br />
-field||show_raw
-formtag_begin|raw_stats|$SCRIPT_NAME
-submit|show_raw_stats| @TR<<&nbsp;Show raw statistics&nbsp;>>
-formtag_end
-end_form
-EOF
-
-		#########################################
-		# raw stats
-		! empty "$FORM_show_raw_stats" && {
-			echo "<br />"
-			echo "<div id=\"qostable3\" class=\"qosraw\">"
-			echo "<table>"
-			echo "<tbody>"
-			echo "<tr>"
-			echo "	<th>@TR<<QoS Packets | Raw Stats>></th>"
-			echo "</tr>"
-			echo "<tr>"
-			echo "	<td><br /><div class=\"smalltext\"><pre>"
-			qos-stat
-			echo "</pre></div></td>"
-			echo "</tr>"
-			echo "<tr>"
-			echo "<td><br /></td>"
-			echo "</tr>"
-			echo "</tbody>"
-			echo "</table>"
-			echo "</div>"
-		}
-	else
-		#########################################
-		# no QoS Service
-		echo "<br />@TR<<no_qos#No QoS Service found running so no parsed QoS statistics can be shown! We recommend to install nbd's QoS scripts.>><br />"	
-	fi
-else	
-	echo "@TR<<qos_scripts_disabled#The qos-scripts package is not active. Visit the <a href=\"./network-qos.sh\">QoS page</a> to install and/or enable it.>>"
-fi
-
-footer ?>
-<!--
-##WEBIF:name:Status:425:QoS
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-qos.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-qos.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-qos.sh	(working copy)
@@ -1,491 +0,0 @@
-#!/usr/bin/webif-page
-<?
-###################################################################
-# qos-scripts configuration page
-# (c)2007 X-Wrt project (http://www.x-wrt.org)
-# (c)2007 Jeremy Collake
-#
-# Description:
-#	Configures the qos-scripts package.
-#
-# Author(s) [in order of work date]:
-#	Jeremy Collake <jeremy.collake@gmail.com>
-#
-# Major revisions:
-#
-# NVRAM variables referenced:
-#   none
-#
-# Configuration files referenced:
-#   /etc/config/qos
-#
-#
-. /usr/lib/webif/webif.sh
-
-header "Network" "QoS" "@TR<<QOS Configuration>>" ' onload="modechange()" ' "$SCRIPT_NAME"
-
-if ! empty "$FORM_install_nbd"; then
-	echo "@TR<<qos_installing#Installing Nbd's QoS scripts>> ...<pre>"
-	install_package qos-scripts
-	echo "</pre>"
-fi
-
-is_package_installed "qos-re" && {
-	echo "<div class=\"warning\">@TR<<qos_found_rudys#Rudy's QoS scripts are found installed. Be sure to uninstall Rudy's scripts before using the new qos-scripts package.>></div>"
-}
-
-# TODO: move this to shared functions somewhere
-# set an option, or remove it if the value is empty
-uci_set_value_remove_if_empty() {
-	local _package="$1"
-	local _config="$2"
-	local _option="$3"
-	local _value="$4"
-	if ! empty "$_value"; then
-		uci_set "$_package" "$_config" "$_option" "$_value"
-	else
-		uci_remove "$_package" "$_config" "$_option"
-	fi
-}
-
-#########################################################################################
-# if qos-scripts installed ... (encapsulates most of remainder)
-#
-if is_package_installed "qos-scripts"; then
-
-uci_load "webif"
-
-#
-# if form submit, then ...
-# else ...
-#
-! empty "$FORM_submit" && empty "$FORM_install_nbd" && {
-	current_qos_item="$FORM_current_rule_index"
-	! empty "$current_qos_item" && {
-		# for validation purposes, replace non-numeric stuff in
-		# ports list and port range with integer.
-		ports_validate=$(echo "$FORM_current_ports" | sed s/','/'0'/g)
-		portrange_validate=$(echo "$FORM_current_portrange" | sed s/'-'/'0'/g)
-validate <<EOF
-int|ports_validate|@TR<<Port Listing>>||$ports_validate
-int|portrange_validate|@TR<<Port Range>>||$portrange_validate
-ip|FORM_current_srchost|@TR<<Source IP>>||$FORM_current_srchost
-ip|FORM_current_dsthost|@TR<<Dest IP>>||$FORM_current_dsthost
-EOF
-		if ! equal "$?" "0"; then
-			echo "<div class=\"warning\">@TR<<qos_validation_failed#Validation of one or more fields failed! Not saving.>></div>"
-		else
-			SAVED=1
-			uci_set "qos" "$current_qos_item" "target" "$FORM_current_target"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "srchost" "$FORM_current_srchost"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "dsthost" "$FORM_current_dsthost"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "proto" "$FORM_current_proto"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "ports" "$FORM_current_ports"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "portrange" "$FORM_current_portrange"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "layer7" "$FORM_current_layer7"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "ipp2p" "$FORM_current_ipp2p"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "mark" "$FORM_current_mark"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "tcpflags" "$FORM_current_tcpflags"
-			uci_set_value_remove_if_empty "qos" "$current_qos_item" "pktsize" "$FORM_current_pktsize"
-		fi
-	}
-
-	validate <<EOF
-int|FORM_wan_dowload|@TR<<WAN Download Speed>>||$FORM_wan_download
-int|FORM_wan_upload|@TR<<WAN Upload Speed>>||$FORM_wan_upload
-EOF
-	equal "$?" "0" && {
-		SAVED=1
-		uci_load qos # to check existing variables
-		! equal "$FORM_wan_enabled" "$CONFIG_wan_enabled" && {
-		 	uci_set "qos" "wan" "enabled" "$FORM_wan_enabled"
-		}
-		! equal "FORM_wan_overhead" "$CONFIG_wan_overhead" && {
-			uci_set "qos" "wan" "overhead" "$FORM_wan_overhead"
-		}
-		! empty "$FORM_wan_download" && ! equal "$FORM_wan_download" "$CONFIG_wan_download" && {
-			uci_set "qos" "wan" "download" "$FORM_wan_download"
-		}
-		! empty "$FORM_wan_upload" && ! equal "$FORM_wan_upload" "$CONFIG_wan_upload" && {
-			uci_set "qos" "wan" "upload" "$FORM_wan_upload"
-		}
-		! empty "$FORM_webif_advanced" && ! equal "$FORM_webif_advanced" "$CONFIG_qos_show_advanced_rules" && {
-			uci_set "webif" "qos" "show_advanced_rules" "$FORM_webif_advanced"
-		}
-	}
-}
-
-#
-# handle 'add new rule'
-#
-! empty "$FORM_qos_add" && {
-	# todo: this add needs to be in the save area, causes instant save here	of
-	#       an empty rule here. However, requires more work than a simple move ;).
-	uci_add "qos" "classify" ""
-}
-
-#
-# handle 'remove' (qos rule)
-#
-! empty "$FORM_qos_remove" && {
-	current_qos_item=$(echo "$QUERY_STRING" | grep "qos_remove=" | cut -d'=' -f2)
-	! empty "$current_qos_item" && {
-		# also manually clear the other options so they are immediately empty
-		uci_remove "qos" "$current_qos_item"
-	}
-}
-
-# copy a rule to another - used by swap_rule()
-copy_rule()
-{
-	local section_src=$1
-	local section_dest=$2
-	local _target
-	local _srchost
-	local _dsthost
-	local _proto
-	local _ports
-	local _portrange
-	local _layer7
-	local _ipp2p
-	local _mark
-	local _tcpflags
-	local _pktsize
-	config_get _target "${section_dest}" "target"
-	config_get _srchost "${section_dest}" "srchost"
-	config_get _dsthost "${section_dest}" "dsthost"
-	config_get _proto "${section_dest}" "proto"
-	config_get _ports "${section_dest}" "ports"
-	config_get _portrange "${section_dest}" "portrange"
-	config_get _layer7 "${section_dest}" "layer7"
-	config_get _ipp2p "${section_dest}" "ipp2p"
-	config_get _mark "${section_dest}" "mark"
-	config_get _tcpflags "${section_dest}" "tcpflags"
-	config_get _pktsize "${section_dest}" "pktsize"
-	uci_set_value_remove_if_empty "qos" "$section_src" "target" "$_target"
-	uci_set_value_remove_if_empty "qos" "$section_src" "srchost" "$_srchost"
-	uci_set_value_remove_if_empty "qos" "$section_src" "dsthost" "$_dsthost"
-	uci_set_value_remove_if_empty "qos" "$section_src" "proto" "$_proto"
-	uci_set_value_remove_if_empty "qos" "$section_src" "layer7" "$_layer7"
-	uci_set_value_remove_if_empty "qos" "$section_src" "ipp2p" "$_ipp2p"
-	uci_set_value_remove_if_empty "qos" "$section_src" "ports" "$_ports"
-	uci_set_value_remove_if_empty "qos" "$section_src" "portrange" "$_portrange"
-	uci_set_value_remove_if_empty "qos" "$section_src" "mark" "$_mark"
-	uci_set_value_remove_if_empty "qos" "$section_src" "tcpflags" "$_tcpflags"
-	uci_set_value_remove_if_empty "qos" "$section_src" "pktsize" "$_pktsize"
-}
-
-# swap a rule with another - for up/down
-swap_rule()
-{
-	local section_src=$1
-	local section_dest=$2
-	copy_rule "$1" "$2"
-	copy_rule "$2" "$1"
-	# now a uci_load will reload swapped rules
-}
-
-#
-# handle 'up' or 'down' (qos rule)
-#
-! empty "$FORM_qos_swap_dest" && ! empty "$FORM_qos_swap_src" && {
-	uci_load "qos"
-	swap_rule "$FORM_qos_swap_dest" "$FORM_qos_swap_src"
-}
-
-#
-# show advanced
-#
-FORM_webif_advanced=${FORM_webif_advanced:-$CONFIG_qos_show_advanced_rules}
-
-#
-# load qos-scripts config
-#
-uci_load "qos"
-
-FORM_wan_enabled="$CONFIG_wan_enabled"
-FORM_wan_download="$CONFIG_wan_download"
-FORM_wan_upload="$CONFIG_wan_upload"
-FORM_wan_overhead="$CONFIG_wan_overhead"
-
-######################################################################
-cat <<EOF
-<script type="text/javascript" src="/webif.js"></script>
-<script type="text/javascript">
-
-function modechange()
-{
-	if(isset('wan_enabled','1'))
-	{
-		document.getElementById('wan_upload').disabled = false;
-		document.getElementById('wan_download').disabled = false;
-	}
-	else
-	{
-		document.getElementById('wan_upload').disabled = true;
-		document.getElementById('wan_download').disabled = true;
-	}
-}
-</script>
-EOF
-######################################################################
-
-display_form <<EOF
-onchange|modechange
-start_form|@TR<<QoS Options>>
-field|@TR<<QoS Service>>|field_n_enabled
-select|wan_enabled|$FORM_wan_enabled
-option|1|@TR<<qos_enabled#Enabled>>
-option|0|@TR<<qos_disabled#Disabled>>
-field|@TR<<QoS Overhead Calculation>>|field_wan_overhead
-select|wan_overhead|$FORM_wan_overhead
-option|1|@TR<<qos_overhead_enabled#Enabled>>
-option|0|@TR<<qos_overhead_disabled#Disabled>>
-field|@TR<<WAN Upload Speed>>|field_n_wan_upload
-text|wan_upload|$FORM_wan_upload| @TR<<kilobits>>
-helpitem|Maximum Upload/Download
-helptext|HelpText Maximum Upload#Your maximum sustained upload and download speeds, in kilobits.
-field|@TR<<WAN Download Speed>>|field_n_wan_download
-text|wan_download|$FORM_wan_download| @TR<<kilobits>>
-field|@TR<<Show Advanced Rules>>|field_webif_advanced
-select|webif_advanced|$FORM_webif_advanced
-option|1|@TR<<qos_adv_enabled#Enabled>>
-option|0|@TR<<qos_adv_disabled#Disabled>>
-helpitem|Advanced
-helptext|HelpText Advanced#Normally users just use the form below to configure QoS. Some people may need access to the more advanced settings. Alternatively, you can <a href="./system-editor.sh?path=/etc/config&amp;edit=qos">manually edit the config</a>.
-end_form
-EOF
-
-# show the current ruleset in a table
-cat <<EOF
-<div class="settings">
-<h3><strong>@TR<<QoS Traffic Classification Rules>></strong></h3>
-<table style="width: 90%; margin-left: 2.5em; text-align: left; font-size: 0.8em;" border="0" cellpadding="3" cellspacing="2" summary="QoS Traffic Classification Rules">
-<tbody>
-<tr>
-<th>@TR<<Group>></th>
-EOF
-equal "$FORM_webif_advanced" "1" && {
-	cat <<EOF
-	<th>@TR<<Type>></th>
-EOF
-}
-cat <<EOF
-<th>@TR<<Source IP>></th>
-<th>@TR<<Dest. IP>></th>
-<th>@TR<<Protocol>></th>
-<th>@TR<<Layer-7>></th>
-<th>@TR<<Port range>></th>
-<th>@TR<<Ports>></th>
-EOF
-equal "$FORM_webif_advanced" "1" && {
-	cat <<EOF
-	<th>@TR<<Flags>></th>
-	<th>@TR<<PktSize>></th>
-	<th>@TR<<Mark>></th>
-EOF
-}
-cat <<EOF
-<th></th>
-</tr>
-EOF
-
-# outputs variable to a column
-show_column()
-{
-	# section name
-	# option name
-	# over-ride text (if config option is empty)
-	local _val
-	# config_get returns TYPE if OPTION ($2) is empty, else returns value
-	config_get _val "$1" "$2"
-	echo "<td>${_val:-$4}</td>"
-}
-
-#
-# callback for sections
-#
-local last_shown_rule="-1"
-callback_foreach_rule() {
-	local section_name=$1
-	config_get _type "$section_name" "TYPE"
-	case $_type in
-		"classify") ;;
-		"reclassify") equal "$FORM_webif_advanced" "0" && return;;
-		"default") equal "$FORM_webif_advanced" "0" && return;;
-		*) return;;
-	esac
-	## finishing previous table entry
-	# for 'down' since we didn't know index of next classify item.
-	# if there is a last shown rule, show 'up' option for PREVIOUS rule
-	! equal "$last_shown_rule" "-1" && {
-		echo "<a href=\"$SCRIPT_NAME?qos_swap_dest=$section_name&amp;qos_swap_src=$last_shown_rule\"><img alt=\"@TR<<down>>\" src=\"/images/down.gif\" title=\"@TR<<down>>\" /></a>"
-		echo "</td></tr>"
-	}
-	## end finishing last iteration
-	if equal "$cur_color" "odd"; then
-		cur_color="even"
-		echo "<tr>"
-	else
-		cur_color="odd"
-		echo "<tr class=\"$cur_color\">"
-	fi
-	show_column "$section_name" "target" "" "..."
-	equal "$FORM_webif_advanced" "1" && show_column "$section_name" "TYPE" "" ""
-	show_column "$section_name" "srchost" ""
-	show_column "$section_name" "dsthost" ""
-	eval _val="\"\$CONFIG_${section_name}_ipp2p\""
-	if empty "$_val"; then
-	 	show_column "$section_name" "proto" ""
-	else
-		equal "$_val" "all" && _val="peer-2-peer"
-		show_column "$section_name" "proto" "" "$_val"
-	fi
-	show_column "$section_name" "layer7" ""
-	show_column "$section_name" "portrange" ""
-	show_column "$section_name" "ports" ""
-	equal "$FORM_webif_advanced" "1" && show_column "$section_name" "tcpflags" "" ""
-	equal "$FORM_webif_advanced" "1" && show_column "$section_name" "pktsize" "" ""
-	equal "$FORM_webif_advanced" "1" && show_column "$section_name" "mark" "" ""
-	echo "<td>"
-	echo "<a href=\"$SCRIPT_NAME?qos_remove=$section_name\"><img alt=\"@TR<<delete>>\" src=\"/images/x.gif\" title=\"@TR<<delete>>\" /></a>"
-	echo "<a href=\"$SCRIPT_NAME?qos_edit=$section_name\"><img alt=\"@TR<<edit>>\" src=\"/images/edit.gif\" title=\"@TR<<edit>>\" /></a>"
-	# if there is a last shown rule, show 'up' option
-	! equal "$last_shown_rule" "-1" && {
-		echo "<a href=\"$SCRIPT_NAME?qos_swap_src=$section_name&amp;qos_swap_dest=$last_shown_rule\"><img alt=\"@TR<<up>>\" src=\"/images/up.gif\" title=\"@TR<<up>>\" /></a>"
-	}
-	# if we are adding, always keep last index in FORM_qos_edit
-	! empty "$FORM_qos_add" && FORM_qos_edit="$section_name"
-	last_shown_rule="$section_name"	
-}
-
-config_foreach callback_foreach_rule
-
-# if we showed any rules, finish table row
-! equal "$last_shown_rule" "-1" && {
-	echo "</td></tr>"
-}
-
-cat <<EOF
-<tr><td><a href="$SCRIPT_NAME?qos_add=1">@TR<<new rule>></a></td></tr>
-</tbody></table>
-<div class="clearfix">&nbsp;</div></div>
-EOF
-
-#
-# handle 'edit' (qos rule)
-#
-#
-! empty "$FORM_qos_edit" && {
-	# for padding as if the qos table was encpasulated in std form
-	display_form <<EOF
-	start_form
-	end_form
-EOF
-	#
-	# build list of available L7-protocols
-	#
-	l7_protocols="option||None"
-	for curfile in /etc/l7-protocols/*; do
-		_l7basename=$(basename "$curfile" | sed s/'.pat'//g)
-		l7_protocols="$l7_protocols
-			option|$_l7basename|$_l7basename"
-	done
-
-	current_item="$FORM_qos_edit"
-	config_get _target "${current_item}" "target"
-	config_get _srchost "${current_item}" "srchost"
-	config_get _dsthost "${current_item}" "dsthost"
-	config_get _proto "${current_item}" "proto"
-	config_get _ports "${current_item}" "ports"
-	config_get _portrange "${current_item}" "portrange"
-	config_get _layer7 "${current_item}" "layer7"
-	config_get _ipp2p "${current_item}" "ipp2p"
-	ADVANCED_FIELD_FORM=""
-	equal "$FORM_webif_advanced" "1" && {
-		# config_get returns TYPE if OPTION ($2) is empty, else returns value
-		#config_get _type "${current_item}"
-		config_get _mark "${current_item}" "mark"
-		config_get _tcpflags "${current_item}" "tcpflags"
-		config_get _pktsize "${current_item}" "pktsize"
-		ADVANCED_FIELD_FORM1=""
-		#ADVANCED_FIELD_FORM1="
-		#	field|@TR<<Rule Type>>
-		#	select|current_type|$_type
-		#	option|classify|@TR<<Classify>>
-		#	option|default|@TR<<Default>>
-		#	option|reclassify|@TR<<Reclassify>>
-		#"
-		ADVANCED_FIELD_FORM2="
-			field|@TR<<TCP Flags>>
-			text|current_tcpflags|$_tcpflags
-			field|@TR<<Mark>>
-			text|current_mark|$_mark
-			field|@TR<<Packet Size>>
-			text|current_mark|$_pktsize"
-	}
-
-	display_form <<EOF
-	start_form|@TR<<QoS Rule Edit>>
-	field|@TR<<Rules Index>>|rule_number|hidden
-	text|current_rule_index|$current_item|hidden
-	$ADVANCED_FIELD_FORM1
-	field|@TR<<Classify As>>|current_target
-	select|current_target|$_target
-	option|Bulk|@TR<<Bulk>>
-	option|Normal|@TR<<Normal>>
-	option|Priority|@TR<<Priority>>
-	option|Express|@TR<<Express>>
-	field|@TR<<Source IP>>|current_srchost
-	text|current_srchost|$_srchost
-	field|@TR<<Dest IP>>|current_dsthost
-	text|current_dsthost|$_dsthost
-	field|@TR<<Protocol>>|proto
-	select|current_proto|$_proto
-	option||@TR<<qos_prot_any#Any>>
-	option|tcp|@TR<<qos_prot_tcp#TCP>>
-	option|udp|@TR<<qos_prot_udp#UDP>>
-	option|icmp|@TR<<qos_prot_icmp#ICMP>>
-	$ADVANCED_FIELD_FORM2
-	field|@TR<<Ports>>|current_ports
-	text|current_ports|$_ports
-	field|@TR<<Port Range>>|current_portrange
-	text|current_portrange|$_portrange
-	field|@TR<<Layer7>>|current_layer7
-	select|current_layer7|$_layer7
-	$l7_protocols
-	field|@TR<<Peer-2-Peer>>|ipp2p
-	select|current_ipp2p|$_ipp2p
-	option||@TR<<qos_p2p_none#None>>
-	option|all|@TR<<qos_p2p_all#All>>
-	option|bit|@TR<<qos_p2p_bittorrent#bitTorrent>>
-	option|dc|@TR<<qos_p2p_dc#DirectConnect>>
-	option|edk|@TR<<qos_p2p_ed2k#eDonkey>>
-	option|gnu|@TR<<qos_p2p_gnutella#Gnutella>>
-	option|kazaa|@TR<<qos_p2p_kazaa#Kazaa>>
-	helpitem|QoS Rule Edit
-	helptext|HelPText qos_rule_edit_help#You need only set fields you wish to match traffic on. Leave the others blank.
-	helpitem|Layer-7
-	helptext|HelpText layer7_help#Layer-7 filters are used to identify types of traffic based on content inspection. Numerous layer-7 filters are available on the web, though not all are efficient and accurate. To install more filters, download them and put them in /etc/l7-protocols.
-	helpitem|Peer-2-Peer
-	helptext|HelpText p2p_help#The difference between the Peer-2-Peer field and layer-7 filters is simply that the Peer-2-Peer option uses a special tool, ipp2p, to match traffic of common p2p protocols. It is typically more efficient than layer-7 filters.
-	end_form
-EOF
-}
-#########################################################################################
-# else if qos-scripts NOT installed
-else
-	echo "<div class=\"warning\">@TR<<qos_no_compatible#A compatible QOS package was not found to be installed.>></div>"
-display_form <<EOF
-onchange|modechange
-start_form|@TR<<QoS Packages>>
-field|@TR<<qos_nbds#Nbd's QoS Scripts (recommended)>>|nbd_qos
-submit|install_nbd|@TR<<qos_nbds_install#Install>>
-end_form
-EOF
-fi
-
-footer ?>
-<!--
-##WEBIF:name:Network:600:QoS
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/.categories
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/.categories	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/.categories	(working copy)
@@ -5,8 +5,12 @@
 ##WEBIF:category:-
 ##WEBIF:category:System
 ##WEBIF:category:Network
+##WEBIF:category:-
+##WEBIF:category:Power Tools
+##WEBIF:category:-
 ##WEBIF:category:HotSpot
 ##WEBIF:category:VPN
 ##WEBIF:category:IPBX
 ##WEBIF:category:-
 ##WEBIF:category:Logout
+
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/network-firewall.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/network-firewall.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/network-firewall.sh	(working copy)
@@ -1,535 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# Firewall configuration
-#
-# Description:
-#	Firewall configuration.
-#
-# Author(s) [in order of work date]:
-#	Original webif authors.
-#	Travis Kemen	<kemen04@gmail.com>
-# Major revisions:
-#
-# UCI variables referenced:
-#
-# Configuration files referenced:
-#	firewall
-#
-
-#remove rule
-if ! empty "$FORM_remove_vcfg"; then
-	uci_remove "firewall" "$FORM_remove_vcfg"
-fi
-#The following check needs to remain or we have no good way of knowing if a rule should be added.
-[ -z "$FORM_port_select_rule" ] && FORM_port_select_rule=custom
-#Add new rules
-if [ -n "$FORM_port_rule" -o "$FORM_port_select_rule" != "custom" ]; then
-	validate <<EOF
-string|FORM_name|@TR<<Name>>|nospaces|$FORM_name
-ip|FORM_src_ip_rule|@TR<<Source IP Address>>||$FORM_src_ip_rule
-ip|FORM_dest_ip_rule|@TR<<Destination IP Address>>||$FORM_dest_ip_rule
-ports|FORM_port_rule|@TR<<Destination Port>>||$FORM_port_rule
-EOF
-	equal "$?" 0 && {
-		[ "$FORM_port_select_rule" != "custom" ] && FORM_port_rule="$FORM_port_select_rule"
-		uci_add firewall rule "$FORM_name"; add_rule_cfg="$CONFIG_SECTION"
-		uci_set firewall "$add_rule_cfg" proto "$FORM_protocol_rule"
-		uci_set firewall "$add_rule_cfg" src "$FORM_src_rule"
-		uci_set firewall "$add_rule_cfg" dest "$FORM_dest_rule"
-		uci_set firewall "$add_rule_cfg" src_ip "$FORM_src_ip_rule"
-		uci_set firewall "$add_rule_cfg" dest_ip "$FORM_dest_ip_rule"
-		uci_set firewall "$add_rule_cfg" dest_port "$FORM_port_rule"
-		uci_set firewall "$add_rule_cfg" target "$FORM_target_rule"
-		unset FORM_port_rule FORM_dest_ip_rule FORM_src_ip_rule FORM_protocol_rule FORM_name FORM_src FORM_dest
-		FORM_port_select_rule=custom
-		FORM_src=wan
-	}
-fi
-if [ -n "$FORM_dest_ip_redirect" ]; then
-	validate <<EOF
-string|FORM_name_redirect|@TR<<Name>>|nospaces|$FORM_name_redirect
-ip|FORM_src_ip_redirect|@TR<<Source IP Address>>||$FORM_src_ip_redirect
-ports|FORM_src_dport_redirect|@TR<<Destination Port>>|required|$FORM_src_dport_redirect
-ip|FORM_dest_ip_redirect|@TR<<To IP Address>>|required|$FORM_dest_ip_redirect
-ports|FORM_dest_port_redirect|@TR<<To Port>>||$FORM_dest_port_redirect
-EOF
-	equal "$?" 0 && {
-		[ "$FORM_port_select_redirect" != "custom" ] && FORM_port_rule="$FORM_port_select_redirect"
-		uci_add firewall redirect "$FORM_name_redirect"; add_redirect_cfg="$CONFIG_SECTION"
-		uci_set firewall "$add_redirect_cfg" src wan
-		uci_set firewall "$add_redirect_cfg" proto "$FORM_protocol_redirect"
-		uci_set firewall "$add_redirect_cfg" src_ip "$FORM_src_ip_redirect"
-		uci_set firewall "$add_redirect_cfg" src_dport "$FORM_src_dport_redirect"
-		uci_set firewall "$add_redirect_cfg" dest_ip "$FORM_dest_ip_redirect"
-		[ "$FORM_dest_port_redirect" = "" -a "0" != "$(echo "$FORM_src_dport_redirect" |grep -q "-" -e ":";echo "$?")" ] && FORM_dest_port_redirect="$FORM_src_dport_redirect"
-		uci_set firewall "$add_redirect_cfg" dest_port "$FORM_dest_port_redirect"
-		unset FORM_dest_port_redirect FORM_dest_ip_redirect FORM_src_dport_redirect FORM_src_ip_redirect FORM_protocol_redirect FORM_name_redirect
-		FORM_port_select_redirect=custom
-	}
-fi
-if [ -n "$FORM_add_rule_add" ]; then
-	uci_add firewall forwarding ""; add_forward_cfg="$CONFIG_SECTION"
-	uci_set firewall "$add_forward_cfg" src "$FORM_src_add"
-	uci_set firewall "$add_forward_cfg" dest "$FORM_dest_add"
-fi
-config_cb() {
-	local cfg_type="$1"
-	local cfg_name="$2"
-
-	case "$cfg_type" in
-		forwarding)
-			append forwarding_cfgs "$cfg_name"
-		;;
-		defaults)
-			append default_cfgs "$cfg_name" "$N"
-		;;
-		zone)
-			append zone_cfgs "$cfg_name" "$N"
-		;;
-		rule)
-			append rule_cfgs "$cfg_name" "$N"
-		;;
-		redirect)
-			append redirect_cfgs "$cfg_name" "$N"
-		;;
-		interface)
-			if [ "$cfg_name" != "loopback" ]; then
-				append networks "option|$cfg_name" "$N"
-			fi
-		;;
-	esac
-}
-cur_color="odd"
-get_tr() {
-	if equal "$cur_color" "odd"; then
-		cur_color="even"
-		tr="string|<tr>"
-	else
-		cur_color="odd"
-		tr="string|<tr class=\"odd\">"
-	fi
-}
-
-uci_load firewall
-uci_load network
-append forms "start_form|@TR<<Forwarding Configuration>>" "$N"
-for zone in $forwarding_cfgs; do
-	eval FORM_remove="\$FORM_remove_rule_$zone"
-	if [ "$FORM_remove" != "" ]; then
-		uci_remove firewall "$zone"
-	fi
-	if [ "$FORM_submit" = "" -o "$add_forward_cfg" = "$zone" ]; then
-		config_get FORM_src "$zone" src
-		config_get FORM_dest "$zone" dest
-	else
-		eval FORM_src="\$FORM_src_$zone"
-		eval FORM_dest="\$FORM_dest_$zone"
-		eval FORM_mss="\$FORM_mss_$zone"
-		uci_set firewall "$zone" src "$FORM_src"
-		uci_set firewall "$zone" dest "$FORM_dest"
-	fi
-	if [ "$FORM_remove" = "" ]; then
-		form="field|@TR<<Allow traffic originating from>>
-			select|src_$zone|$FORM_src
-			$networks
-			string|@TR<<to>>
-			select|dest_$zone|$FORM_dest
-			$networks
-			submit|remove_rule_$zone|@TR<<Remove Rule>>"
-		append forms "$form" "$N"
-	fi
-done
-form="field|@TR<<Allow traffic originating from>>
-	select|src_add
-	$networks
-	string|@TR<<to>>
-	select|dest_add
-	$networks
-	submit|add_rule_add|@TR<<Add Rule>>
-	end_form"
-append forms "$form" "$N"
-
-for zone in $default_cfgs; do
-	if [ "$FORM_submit" = "" ]; then
-		config_get FORM_input $zone input
-		config_get FORM_output $zone output
-		config_get FORM_forward $zone forward
-		config_get_bool FORM_syn_flood $zone syn_flood 1
-		config_get_bool FORM_disable_ipv6 $zone disable_ipv6 0
-	else
-		eval FORM_input="\$FORM_input_$zone"
-		eval FORM_output="\$FORM_output_$zone"
-		eval FORM_forward="\$FORM_forward_$zone"
-		eval FORM_syn_flood="\$FORM_syn_flood_$zone"
-		eval FORM_disable_ipv6="\$FORM_disable_ipv6_$zone"
-		uci_set firewall "$zone" disable_ipv6 "$FORM_disable_ipv6"
-		uci_set firewall "$zone" output "$FORM_output"
-		uci_set firewall "$zone" input "$FORM_input"
-		uci_set firewall "$zone" forward "$FORM_forward"
-		[ "$FORM_syn_flood" = "" ] && FORM_syn_flood=0
-		uci_set firewall "$zone" syn_flood "$FORM_syn_flood"
-	fi
-
-	form="start_form|@TR<<Default Zone Settings>>
-		field|@TR<<Input>>
-		select|input_$zone|$FORM_input
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<Output>>
-		select|output_$zone|$FORM_output
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<Forward>>
-		select|forward_$zone|$FORM_forward
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<Disable IPv6>>
-		checkbox|disable_ipv6_$zone|$FORM_disable_ipv6|1
-		field|@TR<<SYN Flood Protection>>
-		checkbox|syn_flood_$zone|$FORM_syn_flood|1
-		end_form"
-		append forms "$form" "$N"
-done
-
-for zone in $zone_cfgs; do
-	if [ "$FORM_submit" = "" ]; then
-		config_get FORM_name $zone name
-		config_get FORM_input $zone input
-		config_get FORM_output $zone output
-		config_get FORM_forward $zone forward
-		config_get_bool FORM_masq $zone masq 0
-		config_get_bool FORM_mtu_fix $zone mtu_fix 0
-	else
-		config_get FORM_name $zone name
-		eval FORM_input="\$FORM_input_$zone"
-		eval FORM_output="\$FORM_output_$zone"
-		eval FORM_forward="\$FORM_forward_$zone"
-		eval FORM_masq="\$FORM_masq_$zone"
-		eval FORM_mtu_fix="\$FORM_mtu_fix_$zone"
-		uci_set firewall "$zone" input "$FORM_input"
-		uci_set firewall "$zone" output "$FORM_output"
-		uci_set firewall "$zone" forward "$FORM_forward"
-		uci_set firewall "$zone" masq "$FORM_masq"
-		uci_set firewall "$zone" mtu_fix "$FORM_mtu_fix"
-	fi
-	form="start_form|@TR<<$FORM_name Zone Settings>>
-		field|@TR<<Input>>
-		select|input_$zone|$FORM_input
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<Output>>
-		select|output_$zone|$FORM_output
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<Forward>>
-		select|forward_$zone|$FORM_forward
-		option|ACCEPT|@TR<<Accept>>
-		option|REJECT|@TR<<Reject>>
-		option|DROP|@TR<<Drop>>
-		field|@TR<<NAT>>
-		checkbox|masq_$zone|$FORM_masq|1
-		field|@TR<<MTU Fix>>
-		checkbox|mtu_fix_$zone|$FORM_mtu_fix|1
-		end_form"
-	append forms "$form" "$N"
-done
-
-get_tr
-form="string|<div class=\"settings\">
-	string|<h3><strong>@TR<<Incoming Ports>></strong></h3>
-	string|<table style=\"width: 90%; margin-left: 2.5em; text-align: left; font-size: 0.8em;\" border=\"0\" cellpadding=\"3\" cellspacing=\"2\" summary=\"@TR<<Incomimg Ports>>\">
-	$tr
-	string|<th>@TR<<Name>></th>
-	string|<th>@TR<<Source>></th>
-	string|<th>@TR<<Destination>></th>
-	string|<th>@TR<<Protocol>></th>
-	string|<th>@TR<<Source IP>></th>
-	string|<th>@TR<<Destination IP>></th>
-	string|<th>@TR<<Port>></th>
-	string|</tr>"
-append forms "$form" "$N"
-for rule in $rule_cfgs; do
-	if [ "$FORM_submit" = "" -o "$add_rule_cfg" = "$rule" ]; then
-		config_get FORM_src "$rule" src "wan"
-		config_get FORM_dest "$rule" dest
-		config_get FORM_protocol "$rule" proto
-		config_get FORM_src_ip "$rule" src_ip
-		config_get FORM_dest_ip "$rule" dest_ip
-		config_get FORM_target "$rule" target "ACCEPT"
-		config_get FORM_port "$rule" dest_port
-		FORM_port_select_rule=custom
-	else
-		eval FORM_src="\$FORM_src_$rule"
-		eval FORM_dest="\$FORM_dest_$rule"
-		eval FORM_protocol="\$FORM_protocol_$rule"
-		eval FORM_src_ip="\$FORM_src_ip_$rule"
-		eval FORM_dest_ip="\$FORM_dest_ip_$rule"
-		eval FORM_port="\$FORM_port_$rule"
-		eval FORM_target="\$FORM_target_$rule"
-		validate <<EOF
-ip|FORM_src_ip|@TR<<Source IP Address>>||$FORM_src_ip
-ip|FORM_dest_ip|@TR<<Destination IP Address>>||$FORM_dest_ip
-ports|FORM_port|@TR<<Destination Port>>||$FORM_port
-EOF
-		equal "$?" 0 && {
-			uci_set firewall "$rule" src "$FORM_src"
-			uci_set firewall "$rule" dest "$FORM_dest"
-			uci_set firewall "$rule" proto "$FORM_protocol"
-			uci_set firewall "$rule" src_ip "$FORM_src_ip"
-			uci_set firewall "$rule" dest_ip "$FORM_dest_ip"
-			uci_set firewall "$rule" dest_port "$FORM_port"
-			uci_set firewall "$rule" target "$FORM_target"
-		}
-	fi
-
-	echo "$rule" |grep -q "cfg*****" && name="" || name="$rule"
-	get_tr
-	form="$tr
-		string|<td>$name</td>
-		string|<td>
-		select|src_$rule|$FORM_src
-		option||@TR<<Router>>
-		$networks
-		string|</td>
-		string|<td>
-		select|dest_$rule|$FORM_dest
-		option||@TR<<Router>>
-		$networks
-		string|</td>
-		string|<td>
-		select|protocol_$rule|$FORM_protocol
-		option|tcp|TCP
-		option|udp|UDP
-		option|tcpudp|Both
-		option|icmp|ICMP
-		string|</td>
-		string|<td>
-		text|src_ip_$rule|$FORM_src_ip
-		string|</td>
-		string|<td>
-		text|dest_ip_$rule|$FORM_dest_ip
-		string|</td>
-		string|<td>
-		text|port_$rule|$FORM_port
-		string|</td>
-		string|<td>
-		select|target_$rule|$FORM_target
-		option|ACCEPT|@TR<<Accept>>
-		option|DROP|@TR<<Drop>>
-		option|REJECT|@TR<<Reject>>
-		string|</td>
-		string|<td>
-		string|<a href=\"$SCRIPT_NAME?remove_vcfg=$rule\">@TR<<Remove Rule>></a>
-		string|</td>
-		string|</tr>"
-	append forms "$form" "$N"
-done
-get_tr
-form="$tr
-	string|<td>
-	text|name|$FORM_name
-	string|</td>
-	string|<td>
-	select|src_rule|wan
-	option||@TR<<Router>>
-	$networks
-	string|</td>
-	string|<td>
-	select|dest_rule|
-	option||@TR<<Router>>
-	$networks
-	string|</td>
-	string|<td>
-	select|protocol_rule|$FORM_protocol_rule
-	option|tcp|TCP
-	option|udp|UDP
-	option|tcpudp|Both
-	option|icmp|ICMP
-	string|</td>
-	string|<td>
-	text|src_ip_rule|$FORM_src_ip_rule
-	string|</td>
-	string|<td>
-	text|dest_ip_rule|$FORM_dest_ip_rule
-	string|</td>
-	string|<td>
-	select|port_select_rule|$FORM_port_select_rule
-	option|custom|@TR<<Custom>>
-	option|22|SSH
-	option|25|SMTP
-	option|110|POP3
-	option|143|IMAP
-	option|80|HTTP
-	option|443|HTTPS
-	text|port_rule|$FORM_port_rule
-	string|</td>
-	string|<td>
-	select|target_rule|ACCEPT
-	option|ACCEPT|@TR<<Accept>>
-	option|DROP|@TR<<Drop>>
-	option|REJECT|@TR<<Reject>>
-	string|</td>
-	string|<td>
-	string|&nbsp;
-	string|</td>
-	string|</tr>
-	string|</table></div>"
-append forms "$form" "$N"
-
-#PORT Forwarding
-cur_color="odd"
-get_tr
-form="string|<div class=\"settings\">
-	string|<h3><strong>@TR<<Port Forwarding>></strong></h3>
-	string|<table style=\"width: 90%; margin-left: 2.5em; text-align: left; font-size: 0.8em;\" border=\"0\" cellpadding=\"3\" cellspacing=\"2\" summary=\"@TR<<Port Forwarding>>\">
-	$tr
-	string|<th>@TR<<Name>></th>
-	string|<th>@TR<<Protocol>></th>
-	string|<th>@TR<<Source IP>></th>
-	string|<th>@TR<<Destination Port>></th>
-	string|<th>@TR<<To IP Address>></th>
-	string|<th>@TR<<To Port>></th>
-	string|</tr>"
-append forms "$form" "$N"
-
-for rule in $redirect_cfgs; do
-	if [ "$FORM_submit" = "" -o "$add_redirect_cfg" = "$rule" ]; then
-		config_get FORM_protocol "$rule" proto
-		config_get FORM_src_ip "$rule" src_ip
-		config_get FORM_dest_ip "$rule" dest_ip
-		config_get FORM_src_dport "$rule" src_dport
-		config_get FORM_dest_port "$rule" dest_port
-		FORM_port_select_redirect=custom
-	else
-		eval FORM_protocol="\$FORM_protocol_$rule"
-		eval FORM_src_ip="\$FORM_src_ip_$rule"
-		eval FORM_dest_ip="\$FORM_dest_ip_$rule"
-		eval FORM_dest_port="\$FORM_dest_port_$rule"
-		eval FORM_src_dport="\$FORM_src_dport_$rule"
-		validate <<EOF
-ip|FORM_src_ip_rule|@TR<<Source IP Address>>||$FORM_src_ip_rule
-ip|FORM_dest_ip_rule|@TR<<Destination IP Address>>||$FORM_dest_ip_rule
-ports|FORM_src_dport|@TR<<Destination Port>>|required|$FORM_src_dport
-ip|FORM_dest_ip|@TR<<To IP>>|required|$FORM_dest_ip
-ports|FORM_dest_dport|@TR<<To Port>>||$FORM_dest_dport
-EOF
-		equal "$?" 0 && {
-			uci_set firewall "$rule" proto "$FORM_protocol"
-			uci_set firewall "$rule" src_ip "$FORM_src_ip"
-			uci_set firewall "$rule" dest_ip "$FORM_dest_ip"
-			uci_set firewall "$rule" src_dport "$FORM_src_dport"
-			[ "$FORM_dest_port" = "" -a "0" != "$(echo "$FORM_src_dport_redirect" |grep -q "-" -e ":";echo "$?")" ] && FORM_dest_port="$FORM_src_dport"
-			uci_set firewall "$rule" dest_port "$FORM_dest_port"
-		}
-	fi
-
-	echo "$rule" |grep -q "cfg*****" && name="" || name="$rule"
-	get_tr
-	form="$tr
-		string|<td>$name</td>
-		string|<td>
-		select|protocol_$rule|$FORM_protocol
-		option|tcp|TCP
-		option|udp|UDP
-		option|tcpudp|Both
-		string|</td>
-		string|<td>
-		text|src_ip_$rule|$FORM_src_ip
-		string|</td>
-		string|<td>
-		text|src_dport_$rule|$FORM_src_dport
-		string|</td>
-		string|<td>
-		text|dest_ip_$rule|$FORM_dest_ip
-		string|</td>
-		string|<td>
-		text|dest_port_$rule|$FORM_dest_port
-		string|</td>
-		string|<td>
-		string|<a href=\"$SCRIPT_NAME?remove_vcfg=$rule\">@TR<<Remove Rule>></a>
-		string|</td>
-		string|</tr>"
-	append forms "$form" "$N"
-done
-get_tr
-form="$tr
-	string|<td>
-	text|name_redirect|$FORM_name_redirect
-	string|</td>
-	string|<td>
-	select|protocol_redirect|$FORM_protocol_redirect
-	option|tcp|TCP
-	option|udp|UDP
-	option|tcpudp|Both
-	string|</td>
-	string|<td>
-	text|src_ip_redirect|$FORM_src_ip_redirect
-	string|</td>
-	string|<td>
-	text|src_dport_redirect|$FORM_src_dport_redirect
-	string|</td>
-	string|<td>
-	text|dest_ip_redirect|$FORM_dest_ip_redirect
-	string|</td>
-	string|<td>
-	select|port_select_redirect|$FORM_port_select_redirect
-	option|custom|@TR<<Custom>>
-	option|22|SSH
-	option|25|SMTP
-	option|110|POP3
-	option|143|IMAP
-	option|80|HTTP
-	option|443|HTTPS
-	text|dest_port_redirect|$FORM_dest_port_redirect
-	string|</td>
-	string|<td>
-	string|&nbsp;
-	string|</td>
-	string|</tr>
-	string|</table></div>"
-append forms "$form" "$N"
-
-header_inject_head="<script type=\"text/javascript\" src=\"/webif.js\"></script>"
-
-header "Network" "Firewall" "@TR<<Firewall>>" 'onload="modechange()" onkeydown="return processKey(event)"' "$SCRIPT_NAME"
-#####################################################################
-# modechange script
-#
-cat <<EOF
-<script type="text/javascript">
-<!--
-function modechange()
-{
-	var v;
-	$js
-
-	v = (isset('port_select_rule','custom'));
-	set_visible('port_rule', v);
-	v = (isset('port_select_redirect','custom'));
-	set_visible('port_redirect', v);
-
-	hide('save');
-	show('save');
-}
--->
-</script>
-
-EOF
-
-display_form <<EOF
-onchange|modechange
-$validate_error
-$forms
-EOF
-
-footer ?>
-<!--
-##WEBIF:name:Network:415:Firewall
--->
Index: feeds/xwrt/webif/files/www/cgi-bin/webif/system-snmp.sh
===================================================================
--- feeds/xwrt/webif/files/www/cgi-bin/webif/system-snmp.sh	(revision 4986)
+++ feeds/xwrt/webif/files/www/cgi-bin/webif/system-snmp.sh	(working copy)
@@ -1,33 +0,0 @@
-#!/usr/bin/webif-page
-<?
-. /usr/lib/webif/webif.sh
-###################################################################
-# SNMP daemon configuration page
-#
-# Kamikaze version
-# 29/04/2007 Liran Tal <liran@enginx.com>
-#
-# Description:
-#	Configures SNMP daemon.
-#
-# Author(s) [in order of work date]:
-#	Liran Tal <liran at enginx.com>
-#	Lubos Stanek <lubek at users.berlios.de>
-#
-# Configuration files referenced:
-#	none
-#
-
-header "System" "SNMP" "@TR<<SNMP Settings>>" ''
-
-display_form <<EOF
-start_form|@TR<<SNMP Settings>>
-field|
-string|$(ShowWIPWarning)
-end_form
-EOF
-
-footer ?>
-<!--
-##WEBIF:name:System:320:SNMP
--->
Index: feeds/xwrt/webif/files/etc/httpd.conf
===================================================================
--- feeds/xwrt/webif/files/etc/httpd.conf	(revision 4986)
+++ feeds/xwrt/webif/files/etc/httpd.conf	(working copy)
@@ -1,5 +1,3 @@
-/cgi-bin/webif/:root:$p$root
-/cgi-bin/webif/:admin:$p$root
 .asp:text/html
 .svg:image/svg+xml
 .png:image/png
